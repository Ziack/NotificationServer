<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.SimpleEmail</name>
    </assembly>
    <members>
        <member name="T:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig">
            <summary>
            Configuration for accessing Amazon SimpleEmailService service
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.AmazonSimpleEmailServiceException">
            <summary>
             Common exception for the SimpleEmailService service.
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonSimpleEmailServiceException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonSimpleEmailServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonSimpleEmailServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSimpleEmailServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSimpleEmailServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonSimpleEmailServiceException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.BehaviorOnMXFailure">
            <summary>
            Constants used for properties of type BehaviorOnMXFailure.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.BehaviorOnMXFailure.RejectMessage">
            <summary>
            Constant RejectMessage for BehaviorOnMXFailure
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.BehaviorOnMXFailure.UseDefaultValue">
            <summary>
            Constant UseDefaultValue for BehaviorOnMXFailure
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.BehaviorOnMXFailure.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.BehaviorOnMXFailure.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.BehaviorOnMXFailure.op_Implicit(System.String)~Amazon.SimpleEmail.BehaviorOnMXFailure">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.BounceType">
            <summary>
            Constants used for properties of type BounceType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.BounceType.ContentRejected">
            <summary>
            Constant ContentRejected for BounceType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.BounceType.DoesNotExist">
            <summary>
            Constant DoesNotExist for BounceType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.BounceType.ExceededQuota">
            <summary>
            Constant ExceededQuota for BounceType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.BounceType.MessageTooLarge">
            <summary>
            Constant MessageTooLarge for BounceType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.BounceType.TemporaryFailure">
            <summary>
            Constant TemporaryFailure for BounceType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.BounceType.Undefined">
            <summary>
            Constant Undefined for BounceType
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.BounceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.BounceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.BounceType.op_Implicit(System.String)~Amazon.SimpleEmail.BounceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.CustomMailFromStatus">
            <summary>
            Constants used for properties of type CustomMailFromStatus.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.CustomMailFromStatus.Failed">
            <summary>
            Constant Failed for CustomMailFromStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.CustomMailFromStatus.Pending">
            <summary>
            Constant Pending for CustomMailFromStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.CustomMailFromStatus.Success">
            <summary>
            Constant Success for CustomMailFromStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.CustomMailFromStatus.TemporaryFailure">
            <summary>
            Constant TemporaryFailure for CustomMailFromStatus
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.CustomMailFromStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.CustomMailFromStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.CustomMailFromStatus.op_Implicit(System.String)~Amazon.SimpleEmail.CustomMailFromStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.DsnAction">
            <summary>
            Constants used for properties of type DsnAction.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.DsnAction.Delayed">
            <summary>
            Constant Delayed for DsnAction
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.DsnAction.Delivered">
            <summary>
            Constant Delivered for DsnAction
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.DsnAction.Expanded">
            <summary>
            Constant Expanded for DsnAction
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.DsnAction.Failed">
            <summary>
            Constant Failed for DsnAction
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.DsnAction.Relayed">
            <summary>
            Constant Relayed for DsnAction
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.DsnAction.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.DsnAction.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.DsnAction.op_Implicit(System.String)~Amazon.SimpleEmail.DsnAction">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.IdentityType">
            <summary>
            Constants used for properties of type IdentityType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.IdentityType.Domain">
            <summary>
            Constant Domain for IdentityType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.IdentityType.EmailAddress">
            <summary>
            Constant EmailAddress for IdentityType
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.IdentityType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.IdentityType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IdentityType.op_Implicit(System.String)~Amazon.SimpleEmail.IdentityType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.InvocationType">
            <summary>
            Constants used for properties of type InvocationType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.InvocationType.Event">
            <summary>
            Constant Event for InvocationType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.InvocationType.RequestResponse">
            <summary>
            Constant RequestResponse for InvocationType
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.InvocationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.InvocationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.InvocationType.op_Implicit(System.String)~Amazon.SimpleEmail.InvocationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.NotificationType">
            <summary>
            Constants used for properties of type NotificationType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.NotificationType.Bounce">
            <summary>
            Constant Bounce for NotificationType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.NotificationType.Complaint">
            <summary>
            Constant Complaint for NotificationType
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.NotificationType.Delivery">
            <summary>
            Constant Delivery for NotificationType
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.NotificationType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.NotificationType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.NotificationType.op_Implicit(System.String)~Amazon.SimpleEmail.NotificationType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.ReceiptFilterPolicy">
            <summary>
            Constants used for properties of type ReceiptFilterPolicy.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.ReceiptFilterPolicy.Allow">
            <summary>
            Constant Allow for ReceiptFilterPolicy
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.ReceiptFilterPolicy.Block">
            <summary>
            Constant Block for ReceiptFilterPolicy
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.ReceiptFilterPolicy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.ReceiptFilterPolicy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.ReceiptFilterPolicy.op_Implicit(System.String)~Amazon.SimpleEmail.ReceiptFilterPolicy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.SNSActionEncoding">
            <summary>
            Constants used for properties of type SNSActionEncoding.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.SNSActionEncoding.Base64">
            <summary>
            Constant Base64 for SNSActionEncoding
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.SNSActionEncoding.UTF8">
            <summary>
            Constant UTF8 for SNSActionEncoding
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.SNSActionEncoding.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.SNSActionEncoding.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.SNSActionEncoding.op_Implicit(System.String)~Amazon.SimpleEmail.SNSActionEncoding">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.StopScope">
            <summary>
            Constants used for properties of type StopScope.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.StopScope.RuleSet">
            <summary>
            Constant RuleSet for StopScope
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.StopScope.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.StopScope.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.StopScope.op_Implicit(System.String)~Amazon.SimpleEmail.StopScope">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.TlsPolicy">
            <summary>
            Constants used for properties of type TlsPolicy.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.TlsPolicy.Optional">
            <summary>
            Constant Optional for TlsPolicy
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.TlsPolicy.Require">
            <summary>
            Constant Require for TlsPolicy
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.TlsPolicy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.TlsPolicy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.TlsPolicy.op_Implicit(System.String)~Amazon.SimpleEmail.TlsPolicy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.VerificationStatus">
            <summary>
            Constants used for properties of type VerificationStatus.
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.Failed">
            <summary>
            Constant Failed for VerificationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.NotStarted">
            <summary>
            Constant NotStarted for VerificationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.Pending">
            <summary>
            Constant Pending for VerificationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.Success">
            <summary>
            Constant Success for VerificationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleEmail.VerificationStatus.TemporaryFailure">
            <summary>
            Constant TemporaryFailure for VerificationStatus
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.VerificationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.VerificationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.VerificationStatus.op_Implicit(System.String)~Amazon.SimpleEmail.VerificationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.AddHeaderAction">
            <summary>
            When included in a receipt rule, this action adds a header to the received email.
            
             
            <para>
            For information about adding a header using a receipt rule, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-add-header.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.AddHeaderAction.HeaderName">
            <summary>
            Gets and sets the property HeaderName. 
            <para>
            The name of the header to add. Must be between 1 and 50 characters, inclusive, and
            consist of alphanumeric (a-z, A-Z, 0-9) characters and dashes only.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.AddHeaderAction.HeaderValue">
            <summary>
            Gets and sets the property HeaderValue. 
            <para>
            Must be less than 2048 characters, and must not contain newline characters ("\r" or
            "\n").
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.AlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new AlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.AlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.AlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.AlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.AlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.AlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Body">
            <summary>
            Represents the body of the message. You can specify text, HTML, or both. If you use
            both, then the message should display correctly in the widest variety of email clients.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Body.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Body.#ctor(Amazon.SimpleEmail.Model.Content)">
            <summary>
            Instantiates Body with the parameterized properties
            </summary>
            <param name="text">The content of the message, in text format. Use this for text-based email clients, or clients on high-latency networks (such as mobile devices).</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Body.Html">
            <summary>
            Gets and sets the property Html. 
            <para>
            The content of the message, in HTML format. Use this for email clients that can process
            HTML. You can include clickable links, formatted text, and much more in an HTML message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Body.Text">
            <summary>
            Gets and sets the property Text. 
            <para>
            The content of the message, in text format. Use this for text-based email clients,
            or clients on high-latency networks (such as mobile devices).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.BounceAction">
            <summary>
            When included in a receipt rule, this action rejects the received email by returning
            a bounce response to the sender and, optionally, publishes a notification to Amazon
            Simple Notification Service (Amazon SNS).
            
             
            <para>
            For information about sending a bounce message in response to a received email, see
            the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-bounce.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BounceAction.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Human-readable text to include in the bounce message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BounceAction.Sender">
            <summary>
            Gets and sets the property Sender. 
            <para>
            The email address of the sender of the bounced email. This is the address from which
            the bounce message will be sent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BounceAction.SmtpReplyCode">
            <summary>
            Gets and sets the property SmtpReplyCode. 
            <para>
            The SMTP reply code, as defined by <a href="https://tools.ietf.org/html/rfc5321">RFC
            5321</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BounceAction.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            The SMTP enhanced status code, as defined by <a href="https://tools.ietf.org/html/rfc3463">RFC
            3463</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BounceAction.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the bounce action
            is taken. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>.
            For more information about Amazon SNS topics, see the <a href="http://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon
            SNS Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.BouncedRecipientInfo">
            <summary>
            Recipient-related information to include in the Delivery Status Notification (DSN)
            when an email that Amazon SES receives on your behalf bounces.
            
             
            <para>
            For information about receiving email through Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BouncedRecipientInfo.BounceType">
            <summary>
            Gets and sets the property BounceType. 
            <para>
            The reason for the bounce. You must provide either this parameter or <code>RecipientDsnFields</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BouncedRecipientInfo.Recipient">
            <summary>
            Gets and sets the property Recipient. 
            <para>
            The email address of the recipient of the bounced email.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BouncedRecipientInfo.RecipientArn">
            <summary>
            Gets and sets the property RecipientArn. 
            <para>
            This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to receive
            email for the recipient of the bounced email. For more information about sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.BouncedRecipientInfo.RecipientDsnFields">
            <summary>
            Gets and sets the property RecipientDsnFields. 
            <para>
            Recipient-related DSN fields, most of which would normally be filled in automatically
            when provided with a <code>BounceType</code>. You must provide either this parameter
            or <code>BounceType</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CannotDeleteException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.CannotDeleteException.#ctor(System.String)">
            <summary>
            Constructs a new CannotDeleteException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.CannotDeleteException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CannotDeleteException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.CannotDeleteException.#ctor(System.Exception)">
            <summary>
            Construct instance of CannotDeleteException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.CannotDeleteException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CannotDeleteException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.CannotDeleteException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CannotDeleteException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.CannotDeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CannotDeleteException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest">
            <summary>
            Container for the parameters to the CloneReceiptRuleSet operation.
            Creates a receipt rule set by cloning an existing one. All receipt rules and configurations
            are copied to the new receipt rule set and are completely independent of the source
            rule set.
            
             
            <para>
            For information about setting up rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest.OriginalRuleSetName">
            <summary>
            Gets and sets the property OriginalRuleSetName. 
            <para>
            The name of the rule set to clone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the rule set to create. The name must:
            </para>
             <ul> <li> 
            <para>
            Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.), underscores (_),
            or dashes (-).
            </para>
             </li> <li> 
            <para>
            Start and end with a letter or number.
            </para>
             </li> <li> 
            <para>
            Contain less than 64 characters.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CloneReceiptRuleSetResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Content">
            <summary>
            Represents textual data, plus an optional character set specification.
            
             
            <para>
            By default, the text must be 7-bit ASCII, due to the constraints of the SMTP protocol.
            If the text must contain any other characters, then you must also specify a character
            set. Examples include UTF-8, ISO-8859-1, and Shift_JIS.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Content.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Content.#ctor(System.String)">
            <summary>
            Instantiates Content with the parameterized properties
            </summary>
            <param name="data">The textual data of the content.</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Content.Charset">
            <summary>
            Gets and sets the property Charset. 
            <para>
            The character set of the content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Content.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The textual data of the content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CreateReceiptFilterRequest">
            <summary>
            Container for the parameters to the CreateReceiptFilter operation.
            Creates a new IP address filter.
            
             
            <para>
            For information about setting up IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.CreateReceiptFilterRequest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            A data structure that describes the IP address filter to create, which consists of
            a name, an IP address range, and whether to allow or block mail from it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CreateReceiptFilterResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CreateReceiptRuleRequest">
            <summary>
            Container for the parameters to the CreateReceiptRule operation.
            Creates a receipt rule.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.CreateReceiptRuleRequest.After">
            <summary>
            Gets and sets the property After. 
            <para>
            The name of an existing rule after which the new rule will be placed. If this parameter
            is null, the new rule will be inserted at the beginning of the rule list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.CreateReceiptRuleRequest.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            A data structure that contains the specified rule's name, actions, recipients, domains,
            enabled status, scan status, and TLS policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.CreateReceiptRuleRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the rule set to which to add the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CreateReceiptRuleResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest">
            <summary>
            Container for the parameters to the CreateReceiptRuleSet operation.
            Creates an empty receipt rule set.
            
             
            <para>
            For information about setting up receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the rule set to create. The name must:
            </para>
             <ul> <li> 
            <para>
            Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.), underscores (_),
            or dashes (-).
            </para>
             </li> <li> 
            <para>
            Start and end with a letter or number.
            </para>
             </li> <li> 
            <para>
            Contain less than 64 characters.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.CreateReceiptRuleSetResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest">
            <summary>
            Container for the parameters to the DeleteIdentityPolicy operation.
            Deletes the specified sending authorization policy for the given identity (an email
            address or a domain). This API returns successfully even if a policy with the specified
            name does not exist.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity that is associated with the policy that you want to delete. You can specify
            the identity by using its name or by using its Amazon Resource Name (ARN). Examples:
            <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.
            </para>
             
            <para>
            To successfully call this API, you must own the identity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteIdentityPolicyResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteIdentityRequest">
            <summary>
            Container for the parameters to the DeleteIdentity operation.
            Deletes the specified identity (an email address or a domain) from the list of verified
            identities.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteIdentityRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity to be removed from the list of identities for the AWS Account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteIdentityResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest">
            <summary>
            Container for the parameters to the DeleteReceiptFilter operation.
            Deletes the specified IP address filter.
            
             
            <para>
            For information about managing IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the IP address filter to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteReceiptFilterResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest">
            <summary>
            Container for the parameters to the DeleteReceiptRule operation.
            Deletes the specified receipt rule.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the receipt rule to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the receipt rule set that contains the receipt rule to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteReceiptRuleResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest">
            <summary>
            Container for the parameters to the DeleteReceiptRuleSet operation.
            Deletes the specified receipt rule set and all of the receipt rules it contains.
            
             <note> 
            <para>
            The currently active rule set cannot be deleted.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the receipt rule set to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteReceiptRuleSetResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest">
            <summary>
            Container for the parameters to the DeleteVerifiedEmailAddress operation.
            Deletes the specified email address from the list of verified addresses.
            
             <important> 
            <para>
            The DeleteVerifiedEmailAddress action is deprecated as of the May 15, 2012 release
            of Domain Verification. The DeleteIdentity action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest.EmailAddress">
            <summary>
            Gets and sets the property EmailAddress. 
            <para>
            An email address to be removed from the list of verified addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressResponse">
            <summary>
            This is the response object from the DeleteVerifiedEmailAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetRequest">
            <summary>
            Container for the parameters to the DescribeActiveReceiptRuleSet operation.
            Returns the metadata and receipt rules for the receipt rule set that is currently
            active.
            
             
            <para>
            For information about setting up receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetResponse">
            <summary>
            Represents the metadata and receipt rules for the receipt rule set that is currently
            active.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetResponse.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            The metadata for the currently active receipt rule set. The metadata consists of the
            rule set name and a timestamp of when the rule set was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetResponse.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            The receipt rules that belong to the active rule set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest">
            <summary>
            Container for the parameters to the DescribeReceiptRule operation.
            Returns the details of the specified receipt rule.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the receipt rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the receipt rule set to which the receipt rule belongs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DescribeReceiptRuleResponse">
            <summary>
            Represents the details of a receipt rule.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DescribeReceiptRuleResponse.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            A data structure that contains the specified receipt rule's name, actions, recipients,
            domains, enabled status, scan status, and Transport Layer Security (TLS) policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest">
            <summary>
            Container for the parameters to the DescribeReceiptRuleSet operation.
            Returns the details of the specified receipt rule set.
            
             
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the receipt rule set to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.DescribeReceiptRuleSetResponse">
            <summary>
            Represents the details of the specified receipt rule set.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DescribeReceiptRuleSetResponse.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            The metadata for the receipt rule set, which consists of the rule set name and the
            timestamp of when the rule set was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.DescribeReceiptRuleSetResponse.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            A list of the receipt rules that belong to the specified receipt rule set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Destination">
            <summary>
            Represents the destination of the message, consisting of To:, CC:, and BCC: fields.
            
             
            <para>
             By default, the string must be 7-bit ASCII. If the text must contain any other characters,
            then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string.
            MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.
            For more information, see <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.
            
            </para>
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Destination.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Destination.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiates Destination with the parameterized properties
            </summary>
            <param name="toAddresses">The To: field(s) of the message.</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Destination.BccAddresses">
            <summary>
            Gets and sets the property BccAddresses. 
            <para>
            The BCC: field(s) of the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Destination.CcAddresses">
            <summary>
            Gets and sets the property CcAddresses. 
            <para>
            The CC: field(s) of the message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Destination.ToAddresses">
            <summary>
            Gets and sets the property ToAddresses. 
            <para>
            The To: field(s) of the message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ExtensionField">
            <summary>
            Additional X-headers to include in the Delivery Status Notification (DSN) when an
            email that Amazon SES receives on your behalf bounces.
            
             
            <para>
            For information about receiving email through Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ExtensionField.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the header to add. Must be between 1 and 50 characters, inclusive, and
            consist of alphanumeric (a-z, A-Z, 0-9) characters and dashes only.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ExtensionField.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the header to add. Must be less than 2048 characters, and must not contain
            newline characters ("\r" or "\n").
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest">
            <summary>
            Container for the parameters to the GetIdentityDkimAttributes operation.
            Returns the current status of Easy DKIM signing for an entity. For domain name identities,
            this action also returns the DKIM tokens that are required for Easy DKIM signing,
            and whether Amazon SES has successfully verified that these tokens have been published.
            
             
            <para>
            This action takes a list of identities as input and returns the following information
            for each:
            </para>
             <ul> <li> 
            <para>
            Whether Easy DKIM signing is enabled or disabled.
            </para>
             </li> <li> 
            <para>
            A set of DKIM tokens that represent the identity. If the identity is an email address,
            the tokens represent the domain of that address.
            </para>
             </li> <li> 
            <para>
            Whether Amazon SES has successfully verified the DKIM tokens published in the domain's
            DNS. This information is only returned for domain name identities, not for email addresses.
            </para>
             </li> </ul> 
            <para>
            This action is throttled at one request per second and can only get DKIM attributes
            for up to 100 identities at a time.
            </para>
             
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of one or more verified identities - email addresses, domains, or both.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResponse">
            <summary>
            Represents the status of Amazon SES Easy DKIM signing for an identity. For domain
            identities, this response also contains the DKIM tokens that are required for Easy
            DKIM signing, and whether Amazon SES successfully verified that these tokens were
            published.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityDkimAttributesResponse.DkimAttributes">
            <summary>
            Gets and sets the property DkimAttributes. 
            <para>
            The DKIM attributes for an email address or a domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesRequest">
            <summary>
            Container for the parameters to the GetIdentityMailFromDomainAttributes operation.
            Returns the custom MAIL FROM attributes for a list of identities (email addresses
            and/or domains).
            
             
            <para>
            This action is throttled at one request per second and can only get custom MAIL FROM
            attributes for up to 100 identities at a time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesRequest.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of one or more identities.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesResponse">
            <summary>
            Represents the custom MAIL FROM attributes for a list of identities.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesResponse.MailFromDomainAttributes">
            <summary>
            Gets and sets the property MailFromDomainAttributes. 
            <para>
            A map of identities to custom MAIL FROM attributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest">
            <summary>
            Container for the parameters to the GetIdentityNotificationAttributes operation.
            Given a list of verified identities (email addresses and/or domains), returns a structure
            describing identity notification attributes.
            
             
            <para>
            This action is throttled at one request per second and can only get notification attributes
            for up to 100 identities at a time.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of one or more identities. You can specify an identity by using its name or
            by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>,
            <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResponse">
            <summary>
            Represents the notification attributes for a list of identities.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesResponse.NotificationAttributes">
            <summary>
            Gets and sets the property NotificationAttributes. 
            <para>
            A map of Identity to IdentityNotificationAttributes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest">
            <summary>
            Container for the parameters to the GetIdentityPolicies operation.
            Returns the requested sending authorization policies for the given identity (an email
            address or a domain). The policies are returned as a map of policy names to policy
            contents. You can retrieve a maximum of 20 policies at a time.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity for which the policies will be retrieved. You can specify an identity
            by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>,
            <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.
            </para>
             
            <para>
            To successfully call this API, you must own the identity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest.PolicyNames">
            <summary>
            Gets and sets the property PolicyNames. 
            <para>
            A list of the names of policies to be retrieved. You can retrieve a maximum of 20
            policies at a time. If you do not know the names of the policies that are attached
            to the identity, you can use <code>ListIdentityPolicies</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityPoliciesResponse">
            <summary>
            Represents the requested sending authorization policies.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityPoliciesResponse.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            A map of policy names to policies.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest">
            <summary>
            Container for the parameters to the GetIdentityVerificationAttributes operation.
            Given a list of identities (email addresses and/or domains), returns the verification
            status and (for domain identities) the verification token for each identity.
            
             
            <para>
            This action is throttled at one request per second and can only get verification attributes
            for up to 100 identities at a time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of identities.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResponse">
            <summary>
            The Amazon SES verification status of a list of identities. For domain identities,
            this response also contains the verification token.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesResponse.VerificationAttributes">
            <summary>
            Gets and sets the property VerificationAttributes. 
            <para>
            A map of Identities to IdentityVerificationAttributes objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendQuotaRequest">
            <summary>
            Container for the parameters to the GetSendQuota operation.
            Returns the user's current sending limits.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendQuotaResponse">
            <summary>
            Represents your Amazon SES daily sending quota, maximum send rate, and the number
            of emails you have sent in the last 24 hours.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendQuotaResponse.Max24HourSend">
            <summary>
            Gets and sets the property Max24HourSend. 
            <para>
            The maximum number of emails the user is allowed to send in a 24-hour interval. A
            value of -1 signifies an unlimited quota.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendQuotaResponse.MaxSendRate">
            <summary>
            Gets and sets the property MaxSendRate. 
            <para>
            The maximum number of emails that Amazon SES can accept from the user's account per
            second.
            </para>
             <note> 
            <para>
            The rate at which Amazon SES accepts the user's messages might be less than the maximum
            send rate.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendQuotaResponse.SentLast24Hours">
            <summary>
            Gets and sets the property SentLast24Hours. 
            <para>
            The number of emails sent during the previous 24 hours.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendStatisticsRequest">
            <summary>
            Container for the parameters to the GetSendStatistics operation.
            Returns the user's sending statistics. The result is a list of data points, representing
            the last two weeks of sending activity.
            
             
            <para>
            Each data point in the list contains statistics for a 15-minute interval.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.GetSendStatisticsResponse">
            <summary>
            Represents a list of data points. This list contains aggregated data from the previous
            two weeks of your sending activity with Amazon SES.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.GetSendStatisticsResponse.SendDataPoints">
            <summary>
            Gets and sets the property SendDataPoints. 
            <para>
            A list of data points, each of which represents 15 minutes of activity.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.IdentityDkimAttributes">
            <summary>
            Represents the DKIM attributes of a verified email address or a domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityDkimAttributes.DkimEnabled">
            <summary>
            Gets and sets the property DkimEnabled. 
            <para>
            True if DKIM signing is enabled for email sent from the identity; false otherwise.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityDkimAttributes.DkimTokens">
            <summary>
            Gets and sets the property DkimTokens. 
            <para>
            A set of character strings that represent the domain's identity. Using these tokens,
            you will need to create DNS CNAME records that point to DKIM public keys hosted by
            Amazon SES. Amazon Web Services will eventually detect that you have updated your
            DNS records; this detection process may take up to 72 hours. Upon successful detection,
            Amazon SES will be able to DKIM-sign email originating from that domain. (This only
            applies to domain identities, not email address identities.)
            </para>
             
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityDkimAttributes.DkimVerificationStatus">
            <summary>
            Gets and sets the property DkimVerificationStatus. 
            <para>
            Describes whether Amazon SES has successfully verified the DKIM DNS records (tokens)
            published in the domain name's DNS. (This only applies to domain identities, not email
            address identities.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.IdentityMailFromDomainAttributes">
            <summary>
            Represents the custom MAIL FROM domain attributes of a verified identity (email address
            or domain).
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityMailFromDomainAttributes.BehaviorOnMXFailure">
            <summary>
            Gets and sets the property BehaviorOnMXFailure. 
            <para>
            The action that Amazon SES takes if it cannot successfully read the required MX record
            when you send an email. A value of <code>UseDefaultValue</code> indicates that if
            Amazon SES cannot read the required MX record, it uses amazonses.com (or a subdomain
            of that) as the MAIL FROM domain. A value of <code>RejectMessage</code> indicates
            that if Amazon SES cannot read the required MX record, Amazon SES returns a <code>MailFromDomainNotVerified</code>
            error and does not send the email.
            </para>
             
            <para>
            The custom MAIL FROM setup states that result in this behavior are <code>Pending</code>,
            <code>Failed</code>, and <code>TemporaryFailure</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityMailFromDomainAttributes.MailFromDomain">
            <summary>
            Gets and sets the property MailFromDomain. 
            <para>
            The custom MAIL FROM domain that the identity is configured to use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityMailFromDomainAttributes.MailFromDomainStatus">
            <summary>
            Gets and sets the property MailFromDomainStatus. 
            <para>
            The state that indicates whether Amazon SES has successfully read the MX record required
            for custom MAIL FROM domain setup. If the state is <code>Success</code>, Amazon SES
            uses the specified custom MAIL FROM domain when the verified identity sends an email.
            All other states indicate that Amazon SES takes the action described by <code>BehaviorOnMXFailure</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.IdentityNotificationAttributes">
            <summary>
            Represents the notification attributes of an identity, including whether an identity
            has Amazon Simple Notification Service (Amazon SNS) topics set for bounce, complaint,
            and/or delivery notifications, and whether feedback forwarding is enabled for bounce
            and complaint notifications.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.BounceTopic">
            <summary>
            Gets and sets the property BounceTopic. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish
            bounce notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.ComplaintTopic">
            <summary>
            Gets and sets the property ComplaintTopic. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish
            complaint notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.DeliveryTopic">
            <summary>
            Gets and sets the property DeliveryTopic. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish
            delivery notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.ForwardingEnabled">
            <summary>
            Gets and sets the property ForwardingEnabled. 
            <para>
            Describes whether Amazon SES will forward bounce and complaint notifications as email.
            <code>true</code> indicates that Amazon SES will forward bounce and complaint notifications
            as email, while <code>false</code> indicates that bounce and complaint notifications
            will be published only to the specified bounce and complaint Amazon SNS topics.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.HeadersInBounceNotificationsEnabled">
            <summary>
            Gets and sets the property HeadersInBounceNotificationsEnabled. 
            <para>
            Describes whether Amazon SES includes the original email headers in Amazon SNS notifications
            of type <code>Bounce</code>. A value of <code>true</code> specifies that Amazon SES
            will include headers in bounce notifications, and a value of <code>false</code> specifies
            that Amazon SES will not include headers in bounce notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.HeadersInComplaintNotificationsEnabled">
            <summary>
            Gets and sets the property HeadersInComplaintNotificationsEnabled. 
            <para>
            Describes whether Amazon SES includes the original email headers in Amazon SNS notifications
            of type <code>Complaint</code>. A value of <code>true</code> specifies that Amazon
            SES will include headers in complaint notifications, and a value of <code>false</code>
            specifies that Amazon SES will not include headers in complaint notifications.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityNotificationAttributes.HeadersInDeliveryNotificationsEnabled">
            <summary>
            Gets and sets the property HeadersInDeliveryNotificationsEnabled. 
            <para>
            Describes whether Amazon SES includes the original email headers in Amazon SNS notifications
            of type <code>Delivery</code>. A value of <code>true</code> specifies that Amazon
            SES will include headers in delivery notifications, and a value of <code>false</code>
            specifies that Amazon SES will not include headers in delivery notifications.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.IdentityVerificationAttributes">
            <summary>
            Represents the verification attributes of a single identity.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityVerificationAttributes.VerificationStatus">
            <summary>
            Gets and sets the property VerificationStatus. 
            <para>
            The verification status of the identity: "Pending", "Success", "Failed", or "TemporaryFailure".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.IdentityVerificationAttributes.VerificationToken">
            <summary>
            Gets and sets the property VerificationToken. 
            <para>
            The verification token for a domain identity. Null for email address identities.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidLambdaFunctionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidLambdaFunctionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidLambdaFunctionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLambdaFunctionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidLambdaFunctionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidLambdaFunctionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.InvalidPolicyException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidPolicyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidS3ConfigurationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidS3ConfigurationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidS3ConfigurationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ConfigurationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ConfigurationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidS3ConfigurationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.InvalidSnsTopicException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidSnsTopicException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSnsTopicException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidSnsTopicException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSnsTopicException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidSnsTopicException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSnsTopicException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidSnsTopicException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSnsTopicException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidSnsTopicException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSnsTopicException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.InvalidSnsTopicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSnsTopicException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.LambdaAction">
            <summary>
            When included in a receipt rule, this action calls an AWS Lambda function and, optionally,
            publishes a notification to Amazon Simple Notification Service (Amazon SNS).
            
             
            <para>
            To enable Amazon SES to call your AWS Lambda function or to publish to an Amazon SNS
            topic of another account, Amazon SES must have permission to access those resources.
            For information about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            For information about using AWS Lambda actions in receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-lambda.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.LambdaAction.FunctionArn">
            <summary>
            Gets and sets the property FunctionArn. 
            <para>
            The Amazon Resource Name (ARN) of the AWS Lambda function. An example of an AWS Lambda
            function ARN is <code>arn:aws:lambda:us-west-2:account-id:function:MyFunction</code>.
            For more information about AWS Lambda, see the <a href="http://docs.aws.amazon.com/lambda/latest/dg/welcome.html">AWS
            Lambda Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.LambdaAction.InvocationType">
            <summary>
            Gets and sets the property InvocationType. 
            <para>
            The invocation type of the AWS Lambda function. An invocation type of <code>RequestResponse</code>
            means that the execution of the function will immediately result in a response, and
            a value of <code>Event</code> means that the function will be invoked asynchronously.
            The default value is <code>Event</code>. For information about AWS Lambda invocation
            types, see the <a href="http://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html">AWS
            Lambda Developer Guide</a>.
            </para>
             <important> 
            <para>
            There is a 30-second timeout on <code>RequestResponse</code> invocations. You should
            use <code>Event</code> invocation in most cases. Use <code>RequestResponse</code>
            only when you want to make a mail flow decision, such as whether to stop the receipt
            rule or the receipt rule set.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.LambdaAction.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the Lambda action
            is taken. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>.
            For more information about Amazon SNS topics, see the <a href="http://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon
            SNS Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.LimitExceededException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListIdentitiesRequest">
            <summary>
            Container for the parameters to the ListIdentities operation.
            Returns a list containing all of the identities (email addresses and domains) for
            your AWS account, regardless of verification status.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesRequest.IdentityType">
            <summary>
            Gets and sets the property IdentityType. 
            <para>
            The type of the identities to list. Possible values are "EmailAddress" and "Domain".
            If this parameter is omitted, then all identities will be listed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            The maximum number of identities per page. Possible values are 1-1000 inclusive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use for pagination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListIdentitiesResponse">
            <summary>
            A list of all identities that you have attempted to verify under your AWS account,
            regardless of verification status.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesResponse.Identities">
            <summary>
            Gets and sets the property Identities. 
            <para>
            A list of identities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentitiesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token used for pagination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest">
            <summary>
            Container for the parameters to the ListIdentityPolicies operation.
            Returns a list of sending authorization policies that are attached to the given identity
            (an email address or a domain). This API returns only a list. If you want the actual
            policy content, you can use <code>GetIdentityPolicies</code>.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity that is associated with the policy for which the policies will be listed.
            You can specify an identity by using its name or by using its Amazon Resource Name
            (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.
            </para>
             
            <para>
            To successfully call this API, you must own the identity.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListIdentityPoliciesResponse">
            <summary>
            A list of names of sending authorization policies that apply to an identity.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListIdentityPoliciesResponse.PolicyNames">
            <summary>
            Gets and sets the property PolicyNames. 
            <para>
            A list of names of policies that apply to the specified identity.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListReceiptFiltersRequest">
            <summary>
            Container for the parameters to the ListReceiptFilters operation.
            Lists the IP address filters associated with your AWS account.
            
             
            <para>
            For information about managing IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListReceiptFiltersResponse">
            <summary>
            A list of IP address filters that exist under your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListReceiptFiltersResponse.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A list of IP address filter data structures, which each consist of a name, an IP address
            range, and whether to allow or block mail from it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest">
            <summary>
            Container for the parameters to the ListReceiptRuleSets operation.
            Lists the receipt rule sets that exist under your AWS account. If there are additional
            receipt rule sets to be retrieved, you will receive a <code>NextToken</code> that
            you can provide to the next call to <code>ListReceiptRuleSets</code> to retrieve the
            additional entries.
            
             
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token returned from a previous call to <code>ListReceiptRuleSets</code> to indicate
            the position in the receipt rule set list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListReceiptRuleSetsResponse">
            <summary>
            A list of receipt rule sets that exist under your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListReceiptRuleSetsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token indicating that there are additional receipt rule sets available to be listed.
            Pass this token to successive calls of <code>ListReceiptRuleSets</code> to retrieve
            up to 100 receipt rule sets at a time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListReceiptRuleSetsResponse.RuleSets">
            <summary>
            Gets and sets the property RuleSets. 
            <para>
            The metadata for the currently active receipt rule set. The metadata consists of the
            rule set name and the timestamp of when the rule set was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest">
            <summary>
            Container for the parameters to the ListVerifiedEmailAddresses operation.
            Returns a list containing all of the email addresses that have been verified.
            
             <important> 
            <para>
            The ListVerifiedEmailAddresses action is deprecated as of the May 15, 2012 release
            of Domain Verification. The ListIdentities action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResponse">
            <summary>
            A list of email addresses that you have verified with Amazon SES under your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesResponse.VerifiedEmailAddresses">
            <summary>
            Gets and sets the property VerifiedEmailAddresses. 
            <para>
            A list of email addresses that have been verified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException.#ctor(System.String)">
            <summary>
            Constructs a new MailFromDomainNotVerifiedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MailFromDomainNotVerifiedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException.#ctor(System.Exception)">
            <summary>
            Construct instance of MailFromDomainNotVerifiedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MailFromDomainNotVerifiedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MailFromDomainNotVerifiedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MailFromDomainNotVerifiedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Message">
            <summary>
            Represents the message to be sent, composed of a subject and a body.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Message.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Message.#ctor(Amazon.SimpleEmail.Model.Content,Amazon.SimpleEmail.Model.Body)">
            <summary>
            Instantiates Message with the parameterized properties
            </summary>
            <param name="subject">The subject of the message: A short summary of the content, which will appear in the recipient's inbox.</param>
            <param name="body">The message body.</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Message.Body">
            <summary>
            Gets and sets the property Body. 
            <para>
            The message body.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Message.Subject">
            <summary>
            Gets and sets the property Subject. 
            <para>
            The subject of the message: A short summary of the content, which will appear in the
            recipient's inbox.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.MessageDsn">
            <summary>
            Message-related information to include in the Delivery Status Notification (DSN) when
            an email that Amazon SES receives on your behalf bounces.
            
             
            <para>
            For information about receiving email through Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.MessageDsn.ArrivalDate">
            <summary>
            Gets and sets the property ArrivalDate. 
            <para>
            When the message was received by the reporting mail transfer agent (MTA), in <a href="https://www.ietf.org/rfc/rfc0822.txt">RFC
            822</a> date-time format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.MessageDsn.ExtensionFields">
            <summary>
            Gets and sets the property ExtensionFields. 
            <para>
            Additional X-headers to include in the DSN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.MessageDsn.ReportingMta">
            <summary>
            Gets and sets the property ReportingMta. 
            <para>
            The reporting MTA that attempted to deliver the message, formatted as specified in
            <a href="https://tools.ietf.org/html/rfc3464">RFC 3464</a> (<code>mta-name-type; mta-name</code>).
            The default value is <code>dns; inbound-smtp.[region].amazonaws.com</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.MessageRejectedException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MessageRejectedException.#ctor(System.String)">
            <summary>
            Constructs a new MessageRejectedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MessageRejectedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MessageRejectedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MessageRejectedException.#ctor(System.Exception)">
            <summary>
            Construct instance of MessageRejectedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MessageRejectedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MessageRejectedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MessageRejectedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MessageRejectedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.MessageRejectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MessageRejectedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.PutIdentityPolicyRequest">
            <summary>
            Container for the parameters to the PutIdentityPolicy operation.
            Adds or updates a sending authorization policy for the specified identity (an email
            address or a domain).
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.PutIdentityPolicyRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity to which the policy will apply. You can specify an identity by using
            its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>,
            <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.
            </para>
             
            <para>
            To successfully call this API, you must own the identity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.PutIdentityPolicyRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The text of the policy in JSON format. The policy cannot exceed 4 KB.
            </para>
             
            <para>
            For information about the syntax of sending authorization policies, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html">Amazon
            SES Developer Guide</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.PutIdentityPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy.
            </para>
             
            <para>
            The policy name cannot exceed 64 characters and can only include alphanumeric characters,
            dashes, and underscores.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.PutIdentityPolicyResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.RawMessage">
            <summary>
            Represents the raw data of the message.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RawMessage.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RawMessage.#ctor(System.IO.MemoryStream)">
            <summary>
            Instantiates RawMessage with the parameterized properties
            </summary>
            <param name="data">The raw data of the message. The client must ensure that the message format complies with Internet email standards regarding email header fields, MIME types, MIME encoding, and base64 encoding. The To:, CC:, and BCC: headers in the raw message can contain a group list. If you are using <code>SendRawEmail</code> with sending authorization, you can include X-headers in the raw message to specify the "Source," "From," and "Return-Path" addresses. For more information, see the documentation for <code>SendRawEmail</code>.  <important> Do not include these X-headers in the DKIM signature, because they are removed by Amazon SES before sending the email. </important> For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html">Amazon SES Developer Guide</a>. </param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RawMessage.Data">
            <summary>
            Gets and sets the property Data. 
            <para>
            The raw data of the message. The client must ensure that the message format complies
            with Internet email standards regarding email header fields, MIME types, MIME encoding,
            and base64 encoding.
            </para>
             
            <para>
            The To:, CC:, and BCC: headers in the raw message can contain a group list.
            </para>
             
            <para>
            If you are using <code>SendRawEmail</code> with sending authorization, you can include
            X-headers in the raw message to specify the "Source," "From," and "Return-Path" addresses.
            For more information, see the documentation for <code>SendRawEmail</code>. 
            </para>
             <important> 
            <para>
            Do not include these X-headers in the DKIM signature, because they are removed by
            Amazon SES before sending the email.
            </para>
             </important> 
            <para>
            For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html">Amazon
            SES Developer Guide</a>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ReceiptAction">
            <summary>
            An action that Amazon SES can take when it receives an email on behalf of one or more
            email addresses or domains that you own. An instance of this data type can represent
            only one action.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptAction.AddHeaderAction">
            <summary>
            Gets and sets the property AddHeaderAction. 
            <para>
            Adds a header to the received email.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptAction.BounceAction">
            <summary>
            Gets and sets the property BounceAction. 
            <para>
            Rejects the received email by returning a bounce response to the sender and, optionally,
            publishes a notification to Amazon Simple Notification Service (Amazon SNS).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptAction.LambdaAction">
            <summary>
            Gets and sets the property LambdaAction. 
            <para>
            Calls an AWS Lambda function, and optionally, publishes a notification to Amazon SNS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptAction.S3Action">
            <summary>
            Gets and sets the property S3Action. 
            <para>
            Saves the received message to an Amazon Simple Storage Service (Amazon S3) bucket
            and, optionally, publishes a notification to Amazon SNS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptAction.SNSAction">
            <summary>
            Gets and sets the property SNSAction. 
            <para>
            Publishes the email content within a notification to Amazon SNS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptAction.StopAction">
            <summary>
            Gets and sets the property StopAction. 
            <para>
            Terminates the evaluation of the receipt rule set and optionally publishes a notification
            to Amazon SNS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptAction.WorkmailAction">
            <summary>
            Gets and sets the property WorkmailAction. 
            <para>
            Calls Amazon WorkMail and, optionally, publishes a notification to Amazon SNS.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ReceiptFilter">
            <summary>
            A receipt IP address filter enables you to specify whether to accept or reject mail
            originating from an IP address or range of IP addresses.
            
             
            <para>
            For information about setting up IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptFilter.IpFilter">
            <summary>
            Gets and sets the property IpFilter. 
            <para>
            A structure that provides the IP addresses to block or allow, and whether to block
            or allow incoming mail from them.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the IP address filter. The name must:
            </para>
             <ul> <li> 
            <para>
            Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.), underscores (_),
            or dashes (-).
            </para>
             </li> <li> 
            <para>
            Start and end with a letter or number.
            </para>
             </li> <li> 
            <para>
            Contain less than 64 characters.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ReceiptIpFilter">
            <summary>
            A receipt IP address filter enables you to specify whether to accept or reject mail
            originating from an IP address or range of IP addresses.
            
             
            <para>
            For information about setting up IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptIpFilter.Cidr">
            <summary>
            Gets and sets the property Cidr. 
            <para>
            A single IP address or a range of IP addresses that you want to block or allow, specified
            in Classless Inter-Domain Routing (CIDR) notation. An example of a single email address
            is 10.0.0.1. An example of a range of IP addresses is 10.0.0.1/24. For more information
            about CIDR notation, see <a href="https://tools.ietf.org/html/rfc2317">RFC 2317</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptIpFilter.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            Indicates whether to block or allow incoming mail from the specified IP addresses.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ReceiptRule">
            <summary>
            Receipt rules enable you to specify which actions Amazon SES should take when it receives
            mail on behalf of one or more email addresses or domains that you own.
            
             
            <para>
            Each receipt rule defines a set of email addresses or domains to which it applies.
            If the email addresses or domains match at least one recipient address of the message,
            Amazon SES executes all of the receipt rule's actions on the message.
            </para>
             
            <para>
            For information about setting up receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptRule.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            An ordered list of actions to perform on messages that match at least one of the recipient
            email addresses or domains specified in the receipt rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptRule.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            If <code>true</code>, the receipt rule is active. The default value is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptRule.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the receipt rule. The name must:
            </para>
             <ul> <li> 
            <para>
            Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.), underscores (_),
            or dashes (-).
            </para>
             </li> <li> 
            <para>
            Start and end with a letter or number.
            </para>
             </li> <li> 
            <para>
            Contain less than 64 characters.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptRule.Recipients">
            <summary>
            Gets and sets the property Recipients. 
            <para>
            The recipient domains and email addresses to which the receipt rule applies. If this
            field is not specified, this rule will match all recipients under all verified domains.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptRule.ScanEnabled">
            <summary>
            Gets and sets the property ScanEnabled. 
            <para>
            If <code>true</code>, then messages to which this receipt rule applies are scanned
            for spam and viruses. The default value is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptRule.TlsPolicy">
            <summary>
            Gets and sets the property TlsPolicy. 
            <para>
            Specifies whether Amazon SES should require that incoming email is delivered over
            a connection encrypted with Transport Layer Security (TLS). If this parameter is set
            to <code>Require</code>, Amazon SES will bounce emails that are not received over
            TLS. The default is <code>Optional</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ReceiptRuleSetMetadata">
            <summary>
            Information about a receipt rule set.
            
             
            <para>
            A receipt rule set is a collection of rules that specify what Amazon SES should do
            with mail it receives on behalf of your account's verified domains.
            </para>
             
            <para>
            For information about setting up receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptRuleSetMetadata.CreatedTimestamp">
            <summary>
            Gets and sets the property CreatedTimestamp. 
            <para>
            The date and time the receipt rule set was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReceiptRuleSetMetadata.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the receipt rule set. The name must:
            </para>
             <ul> <li> 
            <para>
            Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.), underscores (_),
            or dashes (-).
            </para>
             </li> <li> 
            <para>
            Start and end with a letter or number.
            </para>
             </li> <li> 
            <para>
            Contain less than 64 characters.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.RecipientDsnFields">
            <summary>
            Recipient-related information to include in the Delivery Status Notification (DSN)
            when an email that Amazon SES receives on your behalf bounces.
            
             
            <para>
            For information about receiving email through Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RecipientDsnFields.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The action performed by the reporting mail transfer agent (MTA) as a result of its
            attempt to deliver the message to the recipient address. This is required by <a href="https://tools.ietf.org/html/rfc3464">RFC
            3464</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RecipientDsnFields.DiagnosticCode">
            <summary>
            Gets and sets the property DiagnosticCode. 
            <para>
            An extended explanation of what went wrong; this is usually an SMTP response. See
            <a href="https://tools.ietf.org/html/rfc3463">RFC 3463</a> for the correct formatting
            of this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RecipientDsnFields.ExtensionFields">
            <summary>
            Gets and sets the property ExtensionFields. 
            <para>
            Additional X-headers to include in the DSN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RecipientDsnFields.FinalRecipient">
            <summary>
            Gets and sets the property FinalRecipient. 
            <para>
            The email address to which the message was ultimately delivered. This corresponds
            to the <code>Final-Recipient</code> in the DSN. If not specified, <code>FinalRecipient</code>
            will be set to the <code>Recipient</code> specified in the <code>BouncedRecipientInfo</code>
            structure. Either <code>FinalRecipient</code> or the recipient in <code>BouncedRecipientInfo</code>
            must be a recipient of the original bounced message.
            </para>
             <note> 
            <para>
            Do not prepend the <code>FinalRecipient</code> email address with <code>rfc 822;</code>,
            as described in <a href="https://tools.ietf.org/html/rfc3798">RFC 3798</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RecipientDsnFields.LastAttemptDate">
            <summary>
            Gets and sets the property LastAttemptDate. 
            <para>
            The time the final delivery attempt was made, in <a href="https://www.ietf.org/rfc/rfc0822.txt">RFC
            822</a> date-time format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RecipientDsnFields.RemoteMta">
            <summary>
            Gets and sets the property RemoteMta. 
            <para>
            The MTA to which the remote MTA attempted to deliver the message, formatted as specified
            in <a href="https://tools.ietf.org/html/rfc3464">RFC 3464</a> (<code>mta-name-type;
            mta-name</code>). This parameter typically applies only to propagating synchronous
            bounces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.RecipientDsnFields.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status code that indicates what went wrong. This is required by <a href="https://tools.ietf.org/html/rfc3464">RFC
            3464</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest">
            <summary>
            Container for the parameters to the ReorderReceiptRuleSet operation.
            Reorders the receipt rules within a receipt rule set.
            
             <note> 
            <para>
            All of the rules in the rule set must be represented in this request. That is, this
            API will return an error if the reorder request doesn't explicitly position all of
            the rules.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest.RuleNames">
            <summary>
            Gets and sets the property RuleNames. 
            <para>
            A list of the specified receipt rule set's receipt rules in the order that you want
            to put them.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the receipt rule set to reorder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.ReorderReceiptRuleSetResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new RuleDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RuleDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of RuleDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RuleDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RuleDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RuleDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            <summary>
             SimpleEmailService exception
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new RuleSetDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RuleSetDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of RuleSetDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RuleSetDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RuleSetDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RuleSetDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.S3Action">
            <summary>
            When included in a receipt rule, this action saves the received message to an Amazon
            Simple Storage Service (Amazon S3) bucket and, optionally, publishes a notification
            to Amazon Simple Notification Service (Amazon SNS).
            
             
            <para>
            To enable Amazon SES to write emails to your Amazon S3 bucket, use an AWS KMS key
            to encrypt your emails, or publish to an Amazon SNS topic of another account, Amazon
            SES must have permission to access those resources. For information about giving permissions,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </para>
             <note> 
            <para>
            When you save your emails to an Amazon S3 bucket, the maximum email size (including
            headers) is 30 MB. Emails larger than that will bounce.
            </para>
             </note> 
            <para>
            For information about specifying Amazon S3 actions in receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-s3.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.S3Action.BucketName">
            <summary>
            Gets and sets the property BucketName. 
            <para>
            The name of the Amazon S3 bucket to which to save the received email.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.S3Action.KmsKeyArn">
            <summary>
            Gets and sets the property KmsKeyArn. 
            <para>
            The customer master key that Amazon SES should use to encrypt your emails before saving
            them to the Amazon S3 bucket. You can use the default master key or a custom master
            key you created in AWS KMS as follows:
            </para>
             <ul> <li> 
            <para>
            To use the default master key, provide an ARN in the form of <code>arn:aws:kms:REGION:ACCOUNT-ID-WITHOUT-HYPHENS:alias/aws/ses</code>.
            For example, if your AWS account ID is 123456789012 and you want to use the default
            master key in the US West (Oregon) region, the ARN of the default master key would
            be <code>arn:aws:kms:us-west-2:123456789012:alias/aws/ses</code>. If you use the default
            master key, you don't need to perform any extra steps to give Amazon SES permission
            to use the key.
            </para>
             </li> <li> 
            <para>
            To use a custom master key you created in AWS KMS, provide the ARN of the master key
            and ensure that you add a statement to your key's policy to give Amazon SES permission
            to use it. For more information about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> </ul> 
            <para>
            For more information about key policies, see the <a href="http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html">AWS
            KMS Developer Guide</a>. If you do not specify a master key, Amazon SES will not encrypt
            your emails.
            </para>
             <important> 
            <para>
            Your mail is encrypted by Amazon SES using the Amazon S3 encryption client before
            the mail is submitted to Amazon S3 for storage. It is not encrypted using Amazon S3
            server-side encryption. This means that you must use the Amazon S3 encryption client
            to decrypt the email after retrieving it from Amazon S3, as the service has no access
            to use your AWS KMS keys for decryption. This encryption client is currently available
            with the <a href="http://aws.amazon.com/sdk-for-java/">AWS Java SDK</a> and <a href="http://aws.amazon.com/sdk-for-ruby/">AWS
            Ruby SDK</a> only. For more information about client-side encryption using AWS KMS
            master keys, see the <a href="http://alpha-docs-aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html">Amazon
            S3 Developer Guide</a>.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.S3Action.ObjectKeyPrefix">
            <summary>
            Gets and sets the property ObjectKeyPrefix. 
            <para>
            The key prefix of the Amazon S3 bucket. The key prefix is similar to a directory name
            that enables you to store similar data under the same directory in a bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.S3Action.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The ARN of the Amazon SNS topic to notify when the message is saved to the Amazon
            S3 bucket. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>.
            For more information about Amazon SNS topics, see the <a href="http://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon
            SNS Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendBounceRequest">
            <summary>
            Container for the parameters to the SendBounce operation.
            Generates and sends a bounce message to the sender of an email you received through
            Amazon SES. You can only use this API on an email up to 24 hours after you receive
            it.
            
             <note> 
            <para>
            You cannot use this API to send generic bounces for mail that was not received by
            Amazon SES.
            </para>
             </note> 
            <para>
            For information about receiving email through Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendBounceRequest.BouncedRecipientInfoList">
            <summary>
            Gets and sets the property BouncedRecipientInfoList. 
            <para>
            A list of recipients of the bounced message, including the information required to
            create the Delivery Status Notifications (DSNs) for the recipients. You must specify
            at least one <code>BouncedRecipientInfo</code> in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendBounceRequest.BounceSender">
            <summary>
            Gets and sets the property BounceSender. 
            <para>
            The address to use in the "From" header of the bounce message. This must be an identity
            that you have verified with Amazon SES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendBounceRequest.BounceSenderArn">
            <summary>
            Gets and sets the property BounceSenderArn. 
            <para>
            This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to use the
            address in the "From" header of the bounce. For more information about sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendBounceRequest.Explanation">
            <summary>
            Gets and sets the property Explanation. 
            <para>
            Human-readable text for the bounce message to explain the failure. If not specified,
            the text will be auto-generated based on the bounced recipient information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendBounceRequest.MessageDsn">
            <summary>
            Gets and sets the property MessageDsn. 
            <para>
            Message-related DSN fields. If not specified, Amazon SES will choose the values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendBounceRequest.OriginalMessageId">
            <summary>
            Gets and sets the property OriginalMessageId. 
            <para>
            The message ID of the message to be bounced.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendBounceResponse">
            <summary>
            Represents a unique message ID.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendBounceResponse.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            The message ID of the bounce message.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendDataPoint">
            <summary>
            Represents sending statistics data. Each <code>SendDataPoint</code> contains statistics
            for a 15-minute period of sending activity.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.Bounces">
            <summary>
            Gets and sets the property Bounces. 
            <para>
            Number of emails that have bounced.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.Complaints">
            <summary>
            Gets and sets the property Complaints. 
            <para>
            Number of unwanted emails that were rejected by recipients.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.DeliveryAttempts">
            <summary>
            Gets and sets the property DeliveryAttempts. 
            <para>
            Number of emails that have been enqueued for sending.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.Rejects">
            <summary>
            Gets and sets the property Rejects. 
            <para>
            Number of emails rejected by Amazon SES.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendDataPoint.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            Time of the data point.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendEmailRequest">
            <summary>
            Container for the parameters to the SendEmail operation.
            Composes an email message based on input data, and then immediately queues the message
            for sending.
            
             
            <para>
            There are several important points to know about <code>SendEmail</code>:
            </para>
             <ul> <li> 
            <para>
            You can only send email from verified email addresses and domains; otherwise, you
            will get an "Email address not verified" error. If your account is still in the Amazon
            SES sandbox, you must also verify every recipient email address except for the recipients
            provided by the Amazon SES mailbox simulator. For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            The total size of the message cannot exceed 10 MB. This includes any attachments that
            are part of the message.
            </para>
             </li> <li> 
            <para>
            Amazon SES has a limit on the total number of recipients per message. The combined
            number of To:, CC: and BCC: email addresses cannot exceed 50. If you need to send
            an email message to a larger audience, you can divide your recipient list into groups
            of 50 or fewer, and then call Amazon SES repeatedly to send the message to each group.
            </para>
             </li> <li> 
            <para>
            For every message that you send, the total number of recipients (To:, CC: and BCC:)
            is counted against your sending quota - the maximum number of emails you can send
            in a 24-hour period. For information about your sending quota, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.SendEmailRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.SendEmailRequest.#ctor(System.String,Amazon.SimpleEmail.Model.Destination,Amazon.SimpleEmail.Model.Message)">
            <summary>
            Instantiates SendEmailRequest with the parameterized properties
            </summary>
            <param name="source">The email address that is sending the email. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. For information about verifying identities, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon SES Developer Guide</a>. If you are sending on behalf of another user and have been permitted to do so by a sending authorization policy, then you must also specify the <code>SourceArn</code> parameter. For more information about sending authorization, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.  In all cases, the email address must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>. For more information, see <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>. </param>
            <param name="destination">The destination for this email, composed of To:, CC:, and BCC: fields.</param>
            <param name="message">The message to be sent.</param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination for this email, composed of To:, CC:, and BCC: fields.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message to be sent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.ReplyToAddresses">
            <summary>
            Gets and sets the property ReplyToAddresses. 
            <para>
            The reply-to email address(es) for the message. If the recipient replies to the message,
            each reply-to address will receive the reply.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.ReturnPath">
            <summary>
            Gets and sets the property ReturnPath. 
            <para>
            The email address to which bounces and complaints are to be forwarded when feedback
            forwarding is enabled. If the message cannot be delivered to the recipient, then an
            error message will be returned from the recipient's ISP; this message will then be
            forwarded to the email address specified by the <code>ReturnPath</code> parameter.
            The <code>ReturnPath</code> parameter is never overwritten. This email address must
            be either individually verified with Amazon SES, or from a domain that has been verified
            with Amazon SES. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.ReturnPathArn">
            <summary>
            Gets and sets the property ReturnPathArn. 
            <para>
            This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to use the
            email address specified in the <code>ReturnPath</code> parameter.
            </para>
             
            <para>
            For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to use <code>feedback@example.com</code>,
            then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.
            </para>
             
            <para>
            For more information about sending authorization, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The email address that is sending the email. This email address must be either individually
            verified with Amazon SES, or from a domain that has been verified with Amazon SES.
            For information about verifying identities, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            If you are sending on behalf of another user and have been permitted to do so by a
            sending authorization policy, then you must also specify the <code>SourceArn</code>
            parameter. For more information about sending authorization, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
             In all cases, the email address must be 7-bit ASCII. If the text must contain any
            other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of
            a literal string. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.
            For more information, see <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailRequest.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to send
            for the email address specified in the <code>Source</code> parameter.
            </para>
             
            <para>
            For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to send from <code>user@example.com</code>,
            then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>Source</code> to be <code>user@example.com</code>.
            </para>
             
            <para>
            For more information about sending authorization, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendEmailResponse">
            <summary>
            Represents a unique message ID.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendEmailResponse.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            The unique message identifier returned from the <code>SendEmail</code> action. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendRawEmailRequest">
            <summary>
            Container for the parameters to the SendRawEmail operation.
            Sends an email message, with header and content specified by the client. The <code>SendRawEmail</code>
            action is useful for sending multipart MIME emails. The raw text of the message must
            comply with Internet email standards; otherwise, the message cannot be sent. 
            
             
            <para>
            There are several important points to know about <code>SendRawEmail</code>:
            </para>
             <ul> <li> 
            <para>
            You can only send email from verified email addresses and domains; otherwise, you
            will get an "Email address not verified" error. If your account is still in the Amazon
            SES sandbox, you must also verify every recipient email address except for the recipients
            provided by the Amazon SES mailbox simulator. For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            The total size of the message cannot exceed 10 MB. This includes any attachments that
            are part of the message.
            </para>
             </li> <li> 
            <para>
            Amazon SES has a limit on the total number of recipients per message. The combined
            number of To:, CC: and BCC: email addresses cannot exceed 50. If you need to send
            an email message to a larger audience, you can divide your recipient list into groups
            of 50 or fewer, and then call Amazon SES repeatedly to send the message to each group.
            </para>
             </li> <li> 
            <para>
            The To:, CC:, and BCC: headers in the raw message can contain a group list. Note that
            each recipient in a group list counts towards the 50-recipient limit.
            </para>
             </li> <li> 
            <para>
            Amazon SES overrides any Message-ID and Date headers you provide.
            </para>
             </li> <li> 
            <para>
            For every message that you send, the total number of recipients (To:, CC: and BCC:)
            is counted against your sending quota - the maximum number of emails you can send
            in a 24-hour period. For information about your sending quota, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            If you are using sending authorization to send on behalf of another user, <code>SendRawEmail</code>
            enables you to specify the cross-account identity for the email's "Source," "From,"
            and "Return-Path" parameters in one of two ways: you can pass optional parameters
            <code>SourceArn</code>, <code>FromArn</code>, and/or <code>ReturnPathArn</code> to
            the API, or you can include the following X-headers in the header of your raw email:
            </para>
             <ul> <li> 
            <para>
             <code>X-SES-SOURCE-ARN</code> 
            </para>
             </li> <li> 
            <para>
             <code>X-SES-FROM-ARN</code> 
            </para>
             </li> <li> 
            <para>
             <code>X-SES-RETURN-PATH-ARN</code> 
            </para>
             </li> </ul> <important> 
            <para>
            Do not include these X-headers in the DKIM signature, because they are removed by
            Amazon SES before sending the email.
            </para>
             </important> 
            <para>
            For the most common sending authorization use case, we recommend that you specify
            the <code>SourceIdentityArn</code> and do not specify either the <code>FromIdentityArn</code>
            or <code>ReturnPathIdentityArn</code>. (The same note applies to the corresponding
            X-headers.) If you only specify the <code>SourceIdentityArn</code>, Amazon SES will
            simply set the "From" address and the "Return Path" address to the identity specified
            in <code>SourceIdentityArn</code>. For more information about sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.SendRawEmailRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.SendRawEmailRequest.#ctor(Amazon.SimpleEmail.Model.RawMessage)">
            <summary>
            Instantiates SendRawEmailRequest with the parameterized properties
            </summary>
            <param name="rawMessage">The raw text of the message. The client is responsible for ensuring the following: <ul> <li> Message must contain a header and a body, separated by a blank line. </li> <li> All required header fields must be present. </li> <li> Each part of a multipart MIME message must be formatted properly. </li> <li> MIME content types must be among those supported by Amazon SES. For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types.html">Amazon SES Developer Guide</a>. </li> <li> Must be base64-encoded. </li> </ul></param>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.Destinations">
            <summary>
            Gets and sets the property Destinations. 
            <para>
            A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.FromArn">
            <summary>
            Gets and sets the property FromArn. 
            <para>
            This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to specify
            a particular "From" address in the header of the raw email.
            </para>
             
            <para>
            Instead of using this parameter, you can use the X-header <code>X-SES-FROM-ARN</code>
            in the raw message of the email. If you use both the <code>FromArn</code> parameter
            and the corresponding X-header, Amazon SES uses the value of the <code>FromArn</code>
            parameter.
            </para>
             <note> 
            <para>
            For information about when to use this parameter, see the description of <code>SendRawEmail</code>
            in this guide, or see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html">Amazon
            SES Developer Guide</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.RawMessage">
            <summary>
            Gets and sets the property RawMessage. 
            <para>
            The raw text of the message. The client is responsible for ensuring the following:
            </para>
             <ul> <li> 
            <para>
            Message must contain a header and a body, separated by a blank line.
            </para>
             </li> <li> 
            <para>
            All required header fields must be present.
            </para>
             </li> <li> 
            <para>
            Each part of a multipart MIME message must be formatted properly.
            </para>
             </li> <li> 
            <para>
            MIME content types must be among those supported by Amazon SES. For more information,
            go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            Must be base64-encoded.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.ReturnPathArn">
            <summary>
            Gets and sets the property ReturnPathArn. 
            <para>
            This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to use the
            email address specified in the <code>ReturnPath</code> parameter.
            </para>
             
            <para>
            For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to use <code>feedback@example.com</code>,
            then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.
            </para>
             
            <para>
            Instead of using this parameter, you can use the X-header <code>X-SES-RETURN-PATH-ARN</code>
            in the raw message of the email. If you use both the <code>ReturnPathArn</code> parameter
            and the corresponding X-header, Amazon SES uses the value of the <code>ReturnPathArn</code>
            parameter.
            </para>
             <note> 
            <para>
            For information about when to use this parameter, see the description of <code>SendRawEmail</code>
            in this guide, or see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html">Amazon
            SES Developer Guide</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The identity's email address. If you do not provide a value for this parameter, you
            must specify a "From" address in the raw text of the message. (You can also specify
            both.)
            </para>
             
            <para>
             By default, the string must be 7-bit ASCII. If the text must contain any other characters,
            then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string.
            MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>.
            For more information, see <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.
            
            </para>
             <note> 
            <para>
            If you specify the <code>Source</code> parameter and have feedback forwarding enabled,
            then bounces and complaints will be sent to this email address. This takes precedence
            over any <i>Return-Path</i> header that you might include in the raw text of the message.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailRequest.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            This parameter is used only for sending authorization. It is the ARN of the identity
            that is associated with the sending authorization policy that permits you to send
            for the email address specified in the <code>Source</code> parameter.
            </para>
             
            <para>
            For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>)
            attaches a policy to it that authorizes you to send from <code>user@example.com</code>,
            then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>,
            and the <code>Source</code> to be <code>user@example.com</code>.
            </para>
             
            <para>
            Instead of using this parameter, you can use the X-header <code>X-SES-SOURCE-ARN</code>
            in the raw message of the email. If you use both the <code>SourceArn</code> parameter
            and the corresponding X-header, Amazon SES uses the value of the <code>SourceArn</code>
            parameter.
            </para>
             <note> 
            <para>
            For information about when to use this parameter, see the description of <code>SendRawEmail</code>
            in this guide, or see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html">Amazon
            SES Developer Guide</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SendRawEmailResponse">
            <summary>
            Represents a unique message ID.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SendRawEmailResponse.MessageId">
            <summary>
            Gets and sets the property MessageId. 
            <para>
            The unique message identifier returned from the <code>SendRawEmail</code> action.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest">
            <summary>
            Container for the parameters to the SetActiveReceiptRuleSet operation.
            Sets the specified receipt rule set as the active receipt rule set.
            
             <note> 
            <para>
            To disable your email-receiving through Amazon SES completely, you can call this API
            with RuleSetName set to null.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the receipt rule set to make active. Setting this value to null disables
            all email receiving.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest">
            <summary>
            Container for the parameters to the SetIdentityDkimEnabled operation.
            Enables or disables Easy DKIM signing of email sent from an identity:
            
             <ul> <li> 
            <para>
            If Easy DKIM signing is enabled for a domain name identity (e.g., <code>example.com</code>),
            then Amazon SES will DKIM-sign all email sent by addresses under that domain name
            (e.g., <code>user@example.com</code>).
            </para>
             </li> <li> 
            <para>
            If Easy DKIM signing is enabled for an email address, then Amazon SES will DKIM-sign
            all email sent by that email address.
            </para>
             </li> </ul> 
            <para>
            For email addresses (e.g., <code>user@example.com</code>), you can only enable Easy
            DKIM signing if the corresponding domain (e.g., <code>example.com</code>) has been
            set up for Easy DKIM using the AWS Console or the <code>VerifyDomainDkim</code> action.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about Easy DKIM signing, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest.DkimEnabled">
            <summary>
            Gets and sets the property DkimEnabled. 
            <para>
            Sets whether DKIM signing is enabled for an identity. Set to <code>true</code> to
            enable DKIM signing for this identity; <code>false</code> to disable it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity for which DKIM signing should be enabled or disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityDkimEnabledResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest">
            <summary>
            Container for the parameters to the SetIdentityFeedbackForwardingEnabled operation.
            Given an identity (an email address or a domain), enables or disables whether Amazon
            SES forwards bounce and complaint notifications as email. Feedback forwarding can
            only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified
            for both bounces and complaints.
            
             <note> 
            <para>
            Feedback forwarding does not apply to delivery notifications. Delivery notifications
            are only available through Amazon SNS.
            </para>
             </note> 
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest.ForwardingEnabled">
            <summary>
            Gets and sets the property ForwardingEnabled. 
            <para>
            Sets whether Amazon SES will forward bounce and complaint notifications as email.
            <code>true</code> specifies that Amazon SES will forward bounce and complaint notifications
            as email, in addition to any Amazon SNS topic publishing otherwise specified. <code>false</code>
            specifies that Amazon SES will publish bounce and complaint notifications only through
            Amazon SNS. This value can only be set to <code>false</code> when Amazon SNS topics
            are set for both <code>Bounce</code> and <code>Complaint</code> notification types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity for which to set bounce and complaint notification forwarding. Examples:
            <code>user@example.com</code>, <code>example.com</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest">
            <summary>
            Container for the parameters to the SetIdentityHeadersInNotificationsEnabled operation.
            Given an identity (an email address or a domain), sets whether Amazon SES includes
            the original email headers in the Amazon Simple Notification Service (Amazon SNS)
            notifications of a specified type.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Sets whether Amazon SES includes the original email headers in Amazon SNS notifications
            of the specified notification type. A value of <code>true</code> specifies that Amazon
            SES will include headers in notifications, and a value of <code>false</code> specifies
            that Amazon SES will not include headers in notifications.
            </para>
             
            <para>
            This value can only be set when <code>NotificationType</code> is already set to use
            a particular Amazon SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity for which to enable or disable headers in notifications. Examples: <code>user@example.com</code>,
            <code>example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest.NotificationType">
            <summary>
            Gets and sets the property NotificationType. 
            <para>
            The notification type for which to enable or disable headers in notifications. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest">
            <summary>
            Container for the parameters to the SetIdentityMailFromDomain operation.
            Enables or disables the custom MAIL FROM domain setup for a verified identity (an
            email address or a domain).
            
             <important> 
            <para>
            To send emails using the specified MAIL FROM domain, you must add an MX record to
            your MAIL FROM domain's DNS settings. If you want your emails to pass Sender Policy
            Framework (SPF) checks, you must also add or update an SPF record. For more information,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest.BehaviorOnMXFailure">
            <summary>
            Gets and sets the property BehaviorOnMXFailure. 
            <para>
            The action that you want Amazon SES to take if it cannot successfully read the required
            MX record when you send an email. If you choose <code>UseDefaultValue</code>, Amazon
            SES will use amazonses.com (or a subdomain of that) as the MAIL FROM domain. If you
            choose <code>RejectMessage</code>, Amazon SES will return a <code>MailFromDomainNotVerified</code>
            error and not send the email.
            </para>
             
            <para>
            The action specified in <code>BehaviorOnMXFailure</code> is taken when the custom
            MAIL FROM domain setup is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>
            states.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The verified identity for which you want to enable or disable the specified custom
            MAIL FROM domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest.MailFromDomain">
            <summary>
            Gets and sets the property MailFromDomain. 
            <para>
            The custom MAIL FROM domain that you want the verified identity to use. The MAIL FROM
            domain must 1) be a subdomain of the verified identity, 2) not be used in a "From"
            address if the MAIL FROM domain is the destination of email feedback forwarding (for
            more information, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from.html">Amazon
            SES Developer Guide</a>), and 3) not be used to receive emails. A value of <code>null</code>
            disables the custom MAIL FROM setting for the identity.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityMailFromDomainResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest">
            <summary>
            Container for the parameters to the SetIdentityNotificationTopic operation.
            Given an identity (an email address or a domain), sets the Amazon Simple Notification
            Service (Amazon SNS) topic to which Amazon SES will publish bounce, complaint, and/or
            delivery notifications for emails sent with that identity as the <code>Source</code>.
            
             <note> 
            <para>
            Unless feedback forwarding is enabled, you must specify Amazon SNS topics for bounce
            and complaint notifications. For more information, see <code>SetIdentityFeedbackForwardingEnabled</code>.
            </para>
             </note> 
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about feedback notification, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            The identity for which the Amazon SNS topic will be set. You can specify an identity
            by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>,
            <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest.NotificationType">
            <summary>
            Gets and sets the property NotificationType. 
            <para>
            The type of notifications that will be published to the specified Amazon SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest.SnsTopic">
            <summary>
            Gets and sets the property SnsTopic. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is omitted
            from the request or a null value is passed, <code>SnsTopic</code> is cleared and publishing
            is disabled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetIdentityNotificationTopicResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest">
            <summary>
            Container for the parameters to the SetReceiptRulePosition operation.
            Sets the position of the specified receipt rule in the receipt rule set.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest.After">
            <summary>
            Gets and sets the property After. 
            <para>
            The name of the receipt rule after which to place the specified receipt rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the receipt rule to reposition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the receipt rule set that contains the receipt rule to reposition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SetReceiptRulePositionResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.SNSAction">
            <summary>
            When included in a receipt rule, this action publishes a notification to Amazon Simple
            Notification Service (Amazon SNS). This action includes a complete copy of the email
            content in the Amazon SNS notifications. Amazon SNS notifications for all other actions
            simply provide information about the email. They do not include the email content
            itself.
            
             
            <para>
            If you own the Amazon SNS topic, you don't need to do anything to give Amazon SES
            permission to publish emails to it. However, if you don't own the Amazon SNS topic,
            you need to attach a policy to the topic to give Amazon SES permissions to access
            it. For information about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </para>
             <important> 
            <para>
            You can only publish emails that are 150 KB or less (including the header) to Amazon
            SNS. Larger emails will bounce. If you anticipate emails larger than 150 KB, use the
            S3 action instead.
            </para>
             </important> 
            <para>
            For information about using a receipt rule to publish an Amazon SNS notification,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-sns.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SNSAction.Encoding">
            <summary>
            Gets and sets the property Encoding. 
            <para>
            The encoding to use for the email within the Amazon SNS notification. UTF-8 is easier
            to use, but may not preserve all special characters when a message was encoded with
            a different encoding format. Base64 preserves all special characters. The default
            value is UTF-8.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.SNSAction.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic to notify. An example of an
            Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>. For
            more information about Amazon SNS topics, see the <a href="http://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon
            SNS Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.StopAction">
            <summary>
            When included in a receipt rule, this action terminates the evaluation of the receipt
            rule set and, optionally, publishes a notification to Amazon Simple Notification Service
            (Amazon SNS).
            
             
            <para>
            For information about setting a stop action in a receipt rule, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-stop.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.StopAction.Scope">
            <summary>
            Gets and sets the property Scope. 
            <para>
            The scope to which the Stop action applies. That is, what is being stopped.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.StopAction.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the stop action
            is taken. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>.
            For more information about Amazon SNS topics, see the <a href="http://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon
            SNS Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest">
            <summary>
            Container for the parameters to the UpdateReceiptRule operation.
            Updates a receipt rule.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            A data structure that contains the updated receipt rule information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest.RuleSetName">
            <summary>
            Gets and sets the property RuleSetName. 
            <para>
            The name of the receipt rule set to which the receipt rule belongs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.UpdateReceiptRuleResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainDkimRequest">
            <summary>
            Container for the parameters to the VerifyDomainDkim operation.
            Returns a set of DKIM tokens for a domain. DKIM <i>tokens</i> are character strings
            that represent your domain's identity. Using these tokens, you will need to create
            DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web
            Services will eventually detect that you have updated your DNS records; this detection
            process may take up to 72 hours. Upon successful detection, Amazon SES will be able
            to DKIM-sign email originating from that domain.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            To enable or disable Easy DKIM signing for a domain, use the <code>SetIdentityDkimEnabled</code>
            action.
            </para>
             
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainDkimRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain to be verified for Easy DKIM signing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainDkimResponse">
            <summary>
            Returns CNAME records that you must publish to the DNS server of your domain to set
            up Easy DKIM with Amazon SES.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainDkimResponse.DkimTokens">
            <summary>
            Gets and sets the property DkimTokens. 
            <para>
            A set of character strings that represent the domain's identity. If the identity is
            an email address, the tokens represent the domain of that address.
            </para>
             
            <para>
            Using these tokens, you will need to create DNS CNAME records that point to DKIM public
            keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have
            updated your DNS records; this detection process may take up to 72 hours. Upon successful
            detection, Amazon SES will be able to DKIM-sign emails originating from that domain.
            </para>
             
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest">
            <summary>
            Container for the parameters to the VerifyDomainIdentity operation.
            Verifies a domain.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain to be verified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyDomainIdentityResponse">
            <summary>
            Returns a TXT record that you must publish to the DNS server of your domain to complete
            domain verification with Amazon SES.
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyDomainIdentityResponse.VerificationToken">
            <summary>
            Gets and sets the property VerificationToken. 
            <para>
            A TXT record that must be placed in the DNS settings for the domain, in order to complete
            domain verification.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailAddressRequest">
            <summary>
            Container for the parameters to the VerifyEmailAddress operation.
            Verifies an email address. This action causes a confirmation email message to be sent
            to the specified address.
            
             <important> 
            <para>
            The VerifyEmailAddress action is deprecated as of the May 15, 2012 release of Domain
            Verification. The VerifyEmailIdentity action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyEmailAddressRequest.EmailAddress">
            <summary>
            Gets and sets the property EmailAddress. 
            <para>
            The email address to be verified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailAddressResponse">
            <summary>
            This is the response object from the VerifyEmailAddress operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest">
            <summary>
            Container for the parameters to the VerifyEmailIdentity operation.
            Verifies an email address. This action causes a confirmation email message to be sent
            to the specified address.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest.EmailAddress">
            <summary>
            Gets and sets the property EmailAddress. 
            <para>
            The email address to be verified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.VerifyEmailIdentityResponse">
            <summary>
            An empty element returned on a successful request.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.WorkmailAction">
            <summary>
            When included in a receipt rule, this action calls Amazon WorkMail and, optionally,
            publishes a notification to Amazon Simple Notification Service (Amazon SNS). You will
            typically not use this action directly because Amazon WorkMail adds the rule automatically
            during its setup procedure.
            
             
            <para>
            For information using a receipt rule to call Amazon WorkMail, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-action-workmail.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.WorkmailAction.OrganizationArn">
            <summary>
            Gets and sets the property OrganizationArn. 
            <para>
            The ARN of the Amazon WorkMail organization. An example of an Amazon WorkMail organization
            ARN is <code>arn:aws:workmail:us-west-2:123456789012:organization/m-68755160c4cb4e29a2b2f8fb58f359d7</code>.
            For information about Amazon WorkMail organizations, see the <a href="http://docs.aws.amazon.com/workmail/latest/adminguide/organizations_overview.html">Amazon
            WorkMail Administrator Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.WorkmailAction.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic to notify when the WorkMail
            action is called. An example of an Amazon SNS topic ARN is <code>arn:aws:sns:us-west-2:123456789012:MyTopic</code>.
            For more information about Amazon SNS topics, see the <a href="http://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html">Amazon
            SNS Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.AddHeaderActionUnmarshaller">
            <summary>
            Response Unmarshaller for AddHeaderAction Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.AddHeaderActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.AddHeaderActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.AddHeaderActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.BounceActionUnmarshaller">
            <summary>
            Response Unmarshaller for BounceAction Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.BounceActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.BounceActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.BounceActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetRequestMarshaller">
            <summary>
            CloneReceiptRuleSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CloneReceiptRuleSet operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CloneReceiptRuleSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterRequestMarshaller">
            <summary>
            CreateReceiptFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.CreateReceiptFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateReceiptFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleRequestMarshaller">
            <summary>
            CreateReceiptRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.CreateReceiptRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateReceiptRule operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetRequestMarshaller">
            <summary>
            CreateReceiptRuleSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateReceiptRuleSet operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.CreateReceiptRuleSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyRequestMarshaller">
            <summary>
            DeleteIdentityPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIdentityPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityRequestMarshaller">
            <summary>
            DeleteIdentity Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DeleteIdentityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteIdentity operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteIdentityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterRequestMarshaller">
            <summary>
            DeleteReceiptFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteReceiptFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleRequestMarshaller">
            <summary>
            DeleteReceiptRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteReceiptRule operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetRequestMarshaller">
            <summary>
            DeleteReceiptRuleSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteReceiptRuleSet operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteReceiptRuleSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressRequestMarshaller">
            <summary>
            DeleteVerifiedEmailAddress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteVerifiedEmailAddress operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DeleteVerifiedEmailAddressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetRequestMarshaller">
            <summary>
            DescribeActiveReceiptRuleSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeActiveReceiptRuleSet operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeActiveReceiptRuleSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleRequestMarshaller">
            <summary>
            DescribeReceiptRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReceiptRule operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetRequestMarshaller">
            <summary>
            DescribeReceiptRuleSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeReceiptRuleSet operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.DescribeReceiptRuleSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesRequestMarshaller">
            <summary>
            GetIdentityDkimAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityDkimAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityDkimAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesRequestMarshaller">
            <summary>
            GetIdentityMailFromDomainAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityMailFromDomainAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityMailFromDomainAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesRequestMarshaller">
            <summary>
            GetIdentityNotificationAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityNotificationAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityNotificationAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesRequestMarshaller">
            <summary>
            GetIdentityPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesRequestMarshaller">
            <summary>
            GetIdentityVerificationAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIdentityVerificationAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetIdentityVerificationAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaRequestMarshaller">
            <summary>
            GetSendQuota Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.GetSendQuotaRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSendQuota operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendQuotaResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsRequestMarshaller">
            <summary>
            GetSendStatistics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.GetSendStatisticsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSendStatistics operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.GetSendStatisticsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityDkimAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityDkimAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityDkimAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityDkimAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityDkimAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityMailFromDomainAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityMailFromDomainAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityMailFromDomainAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityMailFromDomainAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityMailFromDomainAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityNotificationAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityNotificationAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityNotificationAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityNotificationAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityNotificationAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityVerificationAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for IdentityVerificationAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityVerificationAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityVerificationAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.IdentityVerificationAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaAction Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller">
            <summary>
            ListIdentities Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.ListIdentitiesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentities operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentitiesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesRequestMarshaller">
            <summary>
            ListIdentityPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListIdentityPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListIdentityPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersRequestMarshaller">
            <summary>
            ListReceiptFilters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.ListReceiptFiltersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListReceiptFilters operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptFiltersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsRequestMarshaller">
            <summary>
            ListReceiptRuleSets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListReceiptRuleSets operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListReceiptRuleSetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesRequestMarshaller">
            <summary>
            ListVerifiedEmailAddresses Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListVerifiedEmailAddresses operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ListVerifiedEmailAddressesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyRequestMarshaller">
            <summary>
            PutIdentityPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.PutIdentityPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutIdentityPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.PutIdentityPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptActionUnmarshaller">
            <summary>
            Response Unmarshaller for ReceiptAction Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptFilterUnmarshaller">
            <summary>
            Response Unmarshaller for ReceiptFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptIpFilterUnmarshaller">
            <summary>
            Response Unmarshaller for ReceiptIpFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptIpFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptIpFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptIpFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleSetMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ReceiptRuleSetMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleSetMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleSetMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleSetMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleUnmarshaller">
            <summary>
            Response Unmarshaller for ReceiptRule Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReceiptRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetRequestMarshaller">
            <summary>
            ReorderReceiptRuleSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReorderReceiptRuleSet operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.ReorderReceiptRuleSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.S3ActionUnmarshaller">
            <summary>
            Response Unmarshaller for S3Action Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.S3ActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.S3ActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.S3ActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceRequestMarshaller">
            <summary>
            SendBounce Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SendBounceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendBounce operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendBounceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendDataPointUnmarshaller">
            <summary>
            Response Unmarshaller for SendDataPoint Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendDataPointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendDataPointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendDataPointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailRequestMarshaller">
            <summary>
            SendEmail Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SendEmailRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendEmail operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendEmailResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailRequestMarshaller">
            <summary>
            SendRawEmail Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SendRawEmailRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendRawEmail operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SendRawEmailResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetRequestMarshaller">
            <summary>
            SetActiveReceiptRuleSet Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetActiveReceiptRuleSet operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetActiveReceiptRuleSetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledRequestMarshaller">
            <summary>
            SetIdentityDkimEnabled Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetIdentityDkimEnabled operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityDkimEnabledResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledRequestMarshaller">
            <summary>
            SetIdentityFeedbackForwardingEnabled Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetIdentityFeedbackForwardingEnabled operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityFeedbackForwardingEnabledResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledRequestMarshaller">
            <summary>
            SetIdentityHeadersInNotificationsEnabled Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetIdentityHeadersInNotificationsEnabled operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityHeadersInNotificationsEnabledResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainRequestMarshaller">
            <summary>
            SetIdentityMailFromDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetIdentityMailFromDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityMailFromDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicRequestMarshaller">
            <summary>
            SetIdentityNotificationTopic Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetIdentityNotificationTopic operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetIdentityNotificationTopicResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionRequestMarshaller">
            <summary>
            SetReceiptRulePosition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetReceiptRulePosition operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SetReceiptRulePositionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SNSActionUnmarshaller">
            <summary>
            Response Unmarshaller for SNSAction Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SNSActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SNSActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.SNSActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.StopActionUnmarshaller">
            <summary>
            Response Unmarshaller for StopAction Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.StopActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.StopActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.StopActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleRequestMarshaller">
            <summary>
            UpdateReceiptRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateReceiptRule operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.UpdateReceiptRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimRequestMarshaller">
            <summary>
            VerifyDomainDkim Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.VerifyDomainDkimRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyDomainDkim operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainDkimResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityRequestMarshaller">
            <summary>
            VerifyDomainIdentity Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyDomainIdentity operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyDomainIdentityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressRequestMarshaller">
            <summary>
            VerifyEmailAddress Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.VerifyEmailAddressRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyEmailAddress operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailAddressResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityRequestMarshaller">
            <summary>
            VerifyEmailIdentity Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityRequestMarshaller.Marshall(Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyEmailIdentity operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.VerifyEmailIdentityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.WorkmailActionUnmarshaller">
            <summary>
            Response Unmarshaller for WorkmailAction Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.WorkmailActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.WorkmailActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleEmail.Model.Internal.MarshallTransformations.WorkmailActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleEmail.AmazonSimpleEmailServiceRequest">
            <summary>
            Base class for SimpleEmailService operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient">
             <summary>
             Implementation for accessing SimpleEmailService
            
             Amazon Simple Email Service 
             <para>
              This is the API Reference for Amazon Simple Email Service (Amazon SES). This documentation
             is intended to be used in conjunction with the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html">Amazon
             SES Developer Guide</a>. 
             </para>
              <note> 
             <para>
              For a list of Amazon SES endpoints to use in service requests, see <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html">Regions
             and Amazon SES</a> in the Amazon SES Developer Guide. 
             </para>
              </note>
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor">
             <summary>
             Constructs AmazonSimpleEmailServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSimpleEmailServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
             <summary>
             Constructs AmazonSimpleEmailServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSimpleEmailServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Credentials and an
            AmazonSimpleEmailServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSimpleEmailServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleEmailServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSimpleEmailServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.#ctor(System.String,System.String,System.String,Amazon.SimpleEmail.AmazonSimpleEmailServiceConfig)">
            <summary>
            Constructs AmazonSimpleEmailServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleEmailServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSimpleEmailServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.CloneReceiptRuleSet(Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest)">
            <summary>
            Creates a receipt rule set by cloning an existing one. All receipt rules and configurations
            are copied to the new receipt rule set and are completely independent of the source
            rule set.
            
             
            <para>
            For information about setting up rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CloneReceiptRuleSet service method.</param>
            
            <returns>The response from the CloneReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            Indicates that a resource could not be created due to a naming conflict.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginCloneReceiptRuleSet(Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CloneReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CloneReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCloneReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndCloneReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CloneReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCloneReceiptRuleSet.</param>
            
            <returns>Returns a  CloneReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.CreateReceiptFilter(Amazon.SimpleEmail.Model.CreateReceiptFilterRequest)">
            <summary>
            Creates a new IP address filter.
            
             
            <para>
            For information about setting up IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateReceiptFilter service method.</param>
            
            <returns>The response from the CreateReceiptFilter service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            Indicates that a resource could not be created due to a naming conflict.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginCreateReceiptFilter(Amazon.SimpleEmail.Model.CreateReceiptFilterRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateReceiptFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReceiptFilter operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateReceiptFilter
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndCreateReceiptFilter(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateReceiptFilter operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateReceiptFilter.</param>
            
            <returns>Returns a  CreateReceiptFilterResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.CreateReceiptRule(Amazon.SimpleEmail.Model.CreateReceiptRuleRequest)">
            <summary>
            Creates a receipt rule.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateReceiptRule service method.</param>
            
            <returns>The response from the CreateReceiptRule service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            Indicates that a resource could not be created due to a naming conflict.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException">
            Indicates that the provided AWS Lambda function is invalid, or that Amazon SES could
            not execute the provided function, possibly due to permissions issues. For information
            about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException">
            Indicates that the provided Amazon S3 bucket or AWS KMS encryption key is invalid,
            or that Amazon SES could not publish to the bucket, possibly due to permissions issues.
            For information about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidSnsTopicException">
            Indicates that the provided Amazon SNS topic is invalid, or that Amazon SES could
            not publish to the topic, possibly due to permissions issues. For information about
            giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginCreateReceiptRule(Amazon.SimpleEmail.Model.CreateReceiptRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateReceiptRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReceiptRule operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateReceiptRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndCreateReceiptRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateReceiptRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateReceiptRule.</param>
            
            <returns>Returns a  CreateReceiptRuleResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.CreateReceiptRuleSet(Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest)">
            <summary>
            Creates an empty receipt rule set.
            
             
            <para>
            For information about setting up receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateReceiptRuleSet service method.</param>
            
            <returns>The response from the CreateReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            Indicates that a resource could not be created due to a naming conflict.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginCreateReceiptRuleSet(Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndCreateReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateReceiptRuleSet.</param>
            
            <returns>Returns a  CreateReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DeleteIdentity(Amazon.SimpleEmail.Model.DeleteIdentityRequest)">
            <summary>
            Deletes the specified identity (an email address or a domain) from the list of verified
            identities.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentity service method.</param>
            
            <returns>The response from the DeleteIdentity service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDeleteIdentity(Amazon.SimpleEmail.Model.DeleteIdentityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteIdentity operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIdentity operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteIdentity
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDeleteIdentity(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteIdentity operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteIdentity.</param>
            
            <returns>Returns a  DeleteIdentityResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DeleteIdentityPolicy(Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest)">
            <summary>
            Deletes the specified sending authorization policy for the given identity (an email
            address or a domain). This API returns successfully even if a policy with the specified
            name does not exist.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityPolicy service method.</param>
            
            <returns>The response from the DeleteIdentityPolicy service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDeleteIdentityPolicy(Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteIdentityPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityPolicy operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteIdentityPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDeleteIdentityPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteIdentityPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteIdentityPolicy.</param>
            
            <returns>Returns a  DeleteIdentityPolicyResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DeleteReceiptFilter(Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest)">
            <summary>
            Deletes the specified IP address filter.
            
             
            <para>
            For information about managing IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptFilter service method.</param>
            
            <returns>The response from the DeleteReceiptFilter service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDeleteReceiptFilter(Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteReceiptFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptFilter operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteReceiptFilter
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDeleteReceiptFilter(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteReceiptFilter operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteReceiptFilter.</param>
            
            <returns>Returns a  DeleteReceiptFilterResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DeleteReceiptRule(Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest)">
            <summary>
            Deletes the specified receipt rule.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptRule service method.</param>
            
            <returns>The response from the DeleteReceiptRule service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDeleteReceiptRule(Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteReceiptRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptRule operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteReceiptRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDeleteReceiptRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteReceiptRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteReceiptRule.</param>
            
            <returns>Returns a  DeleteReceiptRuleResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DeleteReceiptRuleSet(Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest)">
            <summary>
            Deletes the specified receipt rule set and all of the receipt rules it contains.
            
             <note> 
            <para>
            The currently active rule set cannot be deleted.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptRuleSet service method.</param>
            
            <returns>The response from the DeleteReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.CannotDeleteException">
            Indicates that the delete operation could not be completed.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDeleteReceiptRuleSet(Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDeleteReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteReceiptRuleSet.</param>
            
            <returns>Returns a  DeleteReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DeleteVerifiedEmailAddress(Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest)">
            <summary>
            Deletes the specified email address from the list of verified addresses.
            
             <important> 
            <para>
            The DeleteVerifiedEmailAddress action is deprecated as of the May 15, 2012 release
            of Domain Verification. The DeleteIdentity action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVerifiedEmailAddress service method.</param>
            
            <returns>The response from the DeleteVerifiedEmailAddress service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDeleteVerifiedEmailAddress(Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteVerifiedEmailAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVerifiedEmailAddress operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteVerifiedEmailAddress
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDeleteVerifiedEmailAddress(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteVerifiedEmailAddress operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteVerifiedEmailAddress.</param>
            
            <returns>Returns a  DeleteVerifiedEmailAddressResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DescribeActiveReceiptRuleSet(Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetRequest)">
            <summary>
            Returns the metadata and receipt rules for the receipt rule set that is currently
            active.
            
             
            <para>
            For information about setting up receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeActiveReceiptRuleSet service method.</param>
            
            <returns>The response from the DescribeActiveReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDescribeActiveReceiptRuleSet(Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeActiveReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeActiveReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeActiveReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDescribeActiveReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeActiveReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeActiveReceiptRuleSet.</param>
            
            <returns>Returns a  DescribeActiveReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DescribeReceiptRule(Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest)">
            <summary>
            Returns the details of the specified receipt rule.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReceiptRule service method.</param>
            
            <returns>The response from the DescribeReceiptRule service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDescribeReceiptRule(Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeReceiptRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReceiptRule operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeReceiptRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDescribeReceiptRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeReceiptRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeReceiptRule.</param>
            
            <returns>Returns a  DescribeReceiptRuleResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.DescribeReceiptRuleSet(Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest)">
            <summary>
            Returns the details of the specified receipt rule set.
            
             
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReceiptRuleSet service method.</param>
            
            <returns>The response from the DescribeReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginDescribeReceiptRuleSet(Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndDescribeReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeReceiptRuleSet.</param>
            
            <returns>Returns a  DescribeReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetIdentityDkimAttributes(Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest)">
            <summary>
            Returns the current status of Easy DKIM signing for an entity. For domain name identities,
            this action also returns the DKIM tokens that are required for Easy DKIM signing,
            and whether Amazon SES has successfully verified that these tokens have been published.
            
             
            <para>
            This action takes a list of identities as input and returns the following information
            for each:
            </para>
             <ul> <li> 
            <para>
            Whether Easy DKIM signing is enabled or disabled.
            </para>
             </li> <li> 
            <para>
            A set of DKIM tokens that represent the identity. If the identity is an email address,
            the tokens represent the domain of that address.
            </para>
             </li> <li> 
            <para>
            Whether Amazon SES has successfully verified the DKIM tokens published in the domain's
            DNS. This information is only returned for domain name identities, not for email addresses.
            </para>
             </li> </ul> 
            <para>
            This action is throttled at one request per second and can only get DKIM attributes
            for up to 100 identities at a time.
            </para>
             
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityDkimAttributes service method.</param>
            
            <returns>The response from the GetIdentityDkimAttributes service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginGetIdentityDkimAttributes(Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityDkimAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityDkimAttributes operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityDkimAttributes
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndGetIdentityDkimAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityDkimAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityDkimAttributes.</param>
            
            <returns>Returns a  GetIdentityDkimAttributesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetIdentityMailFromDomainAttributes(Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesRequest)">
            <summary>
            Returns the custom MAIL FROM attributes for a list of identities (email addresses
            and/or domains).
            
             
            <para>
            This action is throttled at one request per second and can only get custom MAIL FROM
            attributes for up to 100 identities at a time.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityMailFromDomainAttributes service method.</param>
            
            <returns>The response from the GetIdentityMailFromDomainAttributes service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginGetIdentityMailFromDomainAttributes(Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityMailFromDomainAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityMailFromDomainAttributes operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityMailFromDomainAttributes
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndGetIdentityMailFromDomainAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityMailFromDomainAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityMailFromDomainAttributes.</param>
            
            <returns>Returns a  GetIdentityMailFromDomainAttributesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetIdentityNotificationAttributes(Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest)">
            <summary>
            Given a list of verified identities (email addresses and/or domains), returns a structure
            describing identity notification attributes.
            
             
            <para>
            This action is throttled at one request per second and can only get notification attributes
            for up to 100 identities at a time.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityNotificationAttributes service method.</param>
            
            <returns>The response from the GetIdentityNotificationAttributes service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginGetIdentityNotificationAttributes(Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityNotificationAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityNotificationAttributes operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityNotificationAttributes
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndGetIdentityNotificationAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityNotificationAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityNotificationAttributes.</param>
            
            <returns>Returns a  GetIdentityNotificationAttributesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetIdentityPolicies(Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest)">
            <summary>
            Returns the requested sending authorization policies for the given identity (an email
            address or a domain). The policies are returned as a map of policy names to policy
            contents. You can retrieve a maximum of 20 policies at a time.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityPolicies service method.</param>
            
            <returns>The response from the GetIdentityPolicies service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginGetIdentityPolicies(Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityPolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityPolicies operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityPolicies
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndGetIdentityPolicies(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityPolicies operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityPolicies.</param>
            
            <returns>Returns a  GetIdentityPoliciesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetIdentityVerificationAttributes(Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest)">
            <summary>
            Given a list of identities (email addresses and/or domains), returns the verification
            status and (for domain identities) the verification token for each identity.
            
             
            <para>
            This action is throttled at one request per second and can only get verification attributes
            for up to 100 identities at a time.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityVerificationAttributes service method.</param>
            
            <returns>The response from the GetIdentityVerificationAttributes service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginGetIdentityVerificationAttributes(Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityVerificationAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityVerificationAttributes operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityVerificationAttributes
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndGetIdentityVerificationAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityVerificationAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityVerificationAttributes.</param>
            
            <returns>Returns a  GetIdentityVerificationAttributesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetSendQuota">
            <summary>
            Returns the user's current sending limits.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            
            <returns>The response from the GetSendQuota service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetSendQuota(Amazon.SimpleEmail.Model.GetSendQuotaRequest)">
            <summary>
            Returns the user's current sending limits.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSendQuota service method.</param>
            
            <returns>The response from the GetSendQuota service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginGetSendQuota(Amazon.SimpleEmail.Model.GetSendQuotaRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetSendQuota operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSendQuota operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetSendQuota
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndGetSendQuota(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetSendQuota operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetSendQuota.</param>
            
            <returns>Returns a  GetSendQuotaResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetSendStatistics">
            <summary>
            Returns the user's sending statistics. The result is a list of data points, representing
            the last two weeks of sending activity.
            
             
            <para>
            Each data point in the list contains statistics for a 15-minute interval.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            
            <returns>The response from the GetSendStatistics service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.GetSendStatistics(Amazon.SimpleEmail.Model.GetSendStatisticsRequest)">
            <summary>
            Returns the user's sending statistics. The result is a list of data points, representing
            the last two weeks of sending activity.
            
             
            <para>
            Each data point in the list contains statistics for a 15-minute interval.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSendStatistics service method.</param>
            
            <returns>The response from the GetSendStatistics service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginGetSendStatistics(Amazon.SimpleEmail.Model.GetSendStatisticsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetSendStatistics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSendStatistics operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetSendStatistics
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndGetSendStatistics(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetSendStatistics operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetSendStatistics.</param>
            
            <returns>Returns a  GetSendStatisticsResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListIdentities">
            <summary>
            Returns a list containing all of the identities (email addresses and domains) for
            your AWS account, regardless of verification status.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            
            <returns>The response from the ListIdentities service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListIdentities(Amazon.SimpleEmail.Model.ListIdentitiesRequest)">
            <summary>
            Returns a list containing all of the identities (email addresses and domains) for
            your AWS account, regardless of verification status.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentities service method.</param>
            
            <returns>The response from the ListIdentities service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginListIdentities(Amazon.SimpleEmail.Model.ListIdentitiesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListIdentities operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentities operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListIdentities
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndListIdentities(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListIdentities operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListIdentities.</param>
            
            <returns>Returns a  ListIdentitiesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListIdentityPolicies(Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest)">
            <summary>
            Returns a list of sending authorization policies that are attached to the given identity
            (an email address or a domain). This API returns only a list. If you want the actual
            policy content, you can use <code>GetIdentityPolicies</code>.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityPolicies service method.</param>
            
            <returns>The response from the ListIdentityPolicies service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginListIdentityPolicies(Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListIdentityPolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentityPolicies operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListIdentityPolicies
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndListIdentityPolicies(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListIdentityPolicies operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListIdentityPolicies.</param>
            
            <returns>Returns a  ListIdentityPoliciesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListReceiptFilters(Amazon.SimpleEmail.Model.ListReceiptFiltersRequest)">
            <summary>
            Lists the IP address filters associated with your AWS account.
            
             
            <para>
            For information about managing IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceiptFilters service method.</param>
            
            <returns>The response from the ListReceiptFilters service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginListReceiptFilters(Amazon.SimpleEmail.Model.ListReceiptFiltersRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListReceiptFilters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListReceiptFilters operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListReceiptFilters
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndListReceiptFilters(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListReceiptFilters operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListReceiptFilters.</param>
            
            <returns>Returns a  ListReceiptFiltersResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListReceiptRuleSets(Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest)">
            <summary>
            Lists the receipt rule sets that exist under your AWS account. If there are additional
            receipt rule sets to be retrieved, you will receive a <code>NextToken</code> that
            you can provide to the next call to <code>ListReceiptRuleSets</code> to retrieve the
            additional entries.
            
             
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceiptRuleSets service method.</param>
            
            <returns>The response from the ListReceiptRuleSets service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginListReceiptRuleSets(Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListReceiptRuleSets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListReceiptRuleSets operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListReceiptRuleSets
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndListReceiptRuleSets(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListReceiptRuleSets operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListReceiptRuleSets.</param>
            
            <returns>Returns a  ListReceiptRuleSetsResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListVerifiedEmailAddresses">
            <summary>
            Returns a list containing all of the email addresses that have been verified.
            
             <important> 
            <para>
            The ListVerifiedEmailAddresses action is deprecated as of the May 15, 2012 release
            of Domain Verification. The ListIdentities action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            
            <returns>The response from the ListVerifiedEmailAddresses service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ListVerifiedEmailAddresses(Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest)">
            <summary>
            Returns a list containing all of the email addresses that have been verified.
            
             <important> 
            <para>
            The ListVerifiedEmailAddresses action is deprecated as of the May 15, 2012 release
            of Domain Verification. The ListIdentities action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListVerifiedEmailAddresses service method.</param>
            
            <returns>The response from the ListVerifiedEmailAddresses service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginListVerifiedEmailAddresses(Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListVerifiedEmailAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVerifiedEmailAddresses operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListVerifiedEmailAddresses
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndListVerifiedEmailAddresses(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListVerifiedEmailAddresses operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListVerifiedEmailAddresses.</param>
            
            <returns>Returns a  ListVerifiedEmailAddressesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.PutIdentityPolicy(Amazon.SimpleEmail.Model.PutIdentityPolicyRequest)">
            <summary>
            Adds or updates a sending authorization policy for the specified identity (an email
            address or a domain).
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutIdentityPolicy service method.</param>
            
            <returns>The response from the PutIdentityPolicy service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidPolicyException">
            Indicates that the provided policy is invalid. Check the error stack for more information
            about what caused the error.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginPutIdentityPolicy(Amazon.SimpleEmail.Model.PutIdentityPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the PutIdentityPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutIdentityPolicy operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPutIdentityPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndPutIdentityPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  PutIdentityPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPutIdentityPolicy.</param>
            
            <returns>Returns a  PutIdentityPolicyResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.ReorderReceiptRuleSet(Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest)">
            <summary>
            Reorders the receipt rules within a receipt rule set.
            
             <note> 
            <para>
            All of the rules in the rule set must be represented in this request. That is, this
            API will return an error if the reorder request doesn't explicitly position all of
            the rules.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReorderReceiptRuleSet service method.</param>
            
            <returns>The response from the ReorderReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginReorderReceiptRuleSet(Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ReorderReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReorderReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndReorderReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndReorderReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ReorderReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginReorderReceiptRuleSet.</param>
            
            <returns>Returns a  ReorderReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SendBounce(Amazon.SimpleEmail.Model.SendBounceRequest)">
            <summary>
            Generates and sends a bounce message to the sender of an email you received through
            Amazon SES. You can only use this API on an email up to 24 hours after you receive
            it.
            
             <note> 
            <para>
            You cannot use this API to send generic bounces for mail that was not received by
            Amazon SES.
            </para>
             </note> 
            <para>
            For information about receiving email through Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendBounce service method.</param>
            
            <returns>The response from the SendBounce service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.MessageRejectedException">
            Indicates that the action failed, and the message could not be sent. Check the error
            stack for more information about what caused the error.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSendBounce(Amazon.SimpleEmail.Model.SendBounceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendBounce operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendBounce operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendBounce
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSendBounce(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendBounce operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendBounce.</param>
            
            <returns>Returns a  SendBounceResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SendEmail(Amazon.SimpleEmail.Model.SendEmailRequest)">
            <summary>
            Composes an email message based on input data, and then immediately queues the message
            for sending.
            
             
            <para>
            There are several important points to know about <code>SendEmail</code>:
            </para>
             <ul> <li> 
            <para>
            You can only send email from verified email addresses and domains; otherwise, you
            will get an "Email address not verified" error. If your account is still in the Amazon
            SES sandbox, you must also verify every recipient email address except for the recipients
            provided by the Amazon SES mailbox simulator. For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            The total size of the message cannot exceed 10 MB. This includes any attachments that
            are part of the message.
            </para>
             </li> <li> 
            <para>
            Amazon SES has a limit on the total number of recipients per message. The combined
            number of To:, CC: and BCC: email addresses cannot exceed 50. If you need to send
            an email message to a larger audience, you can divide your recipient list into groups
            of 50 or fewer, and then call Amazon SES repeatedly to send the message to each group.
            </para>
             </li> <li> 
            <para>
            For every message that you send, the total number of recipients (To:, CC: and BCC:)
            is counted against your sending quota - the maximum number of emails you can send
            in a 24-hour period. For information about your sending quota, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendEmail service method.</param>
            
            <returns>The response from the SendEmail service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException">
            Indicates that the message could not be sent because Amazon SES could not read the
            MX record required to use the specified MAIL FROM domain. For information about editing
            the custom MAIL FROM domain settings for an identity, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-edit.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.MessageRejectedException">
            Indicates that the action failed, and the message could not be sent. Check the error
            stack for more information about what caused the error.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSendEmail(Amazon.SimpleEmail.Model.SendEmailRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendEmail operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendEmail operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendEmail
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSendEmail(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendEmail operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendEmail.</param>
            
            <returns>Returns a  SendEmailResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SendRawEmail(Amazon.SimpleEmail.Model.SendRawEmailRequest)">
            <summary>
            Sends an email message, with header and content specified by the client. The <code>SendRawEmail</code>
            action is useful for sending multipart MIME emails. The raw text of the message must
            comply with Internet email standards; otherwise, the message cannot be sent. 
            
             
            <para>
            There are several important points to know about <code>SendRawEmail</code>:
            </para>
             <ul> <li> 
            <para>
            You can only send email from verified email addresses and domains; otherwise, you
            will get an "Email address not verified" error. If your account is still in the Amazon
            SES sandbox, you must also verify every recipient email address except for the recipients
            provided by the Amazon SES mailbox simulator. For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            The total size of the message cannot exceed 10 MB. This includes any attachments that
            are part of the message.
            </para>
             </li> <li> 
            <para>
            Amazon SES has a limit on the total number of recipients per message. The combined
            number of To:, CC: and BCC: email addresses cannot exceed 50. If you need to send
            an email message to a larger audience, you can divide your recipient list into groups
            of 50 or fewer, and then call Amazon SES repeatedly to send the message to each group.
            </para>
             </li> <li> 
            <para>
            The To:, CC:, and BCC: headers in the raw message can contain a group list. Note that
            each recipient in a group list counts towards the 50-recipient limit.
            </para>
             </li> <li> 
            <para>
            Amazon SES overrides any Message-ID and Date headers you provide.
            </para>
             </li> <li> 
            <para>
            For every message that you send, the total number of recipients (To:, CC: and BCC:)
            is counted against your sending quota - the maximum number of emails you can send
            in a 24-hour period. For information about your sending quota, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            If you are using sending authorization to send on behalf of another user, <code>SendRawEmail</code>
            enables you to specify the cross-account identity for the email's "Source," "From,"
            and "Return-Path" parameters in one of two ways: you can pass optional parameters
            <code>SourceArn</code>, <code>FromArn</code>, and/or <code>ReturnPathArn</code> to
            the API, or you can include the following X-headers in the header of your raw email:
            </para>
             <ul> <li> 
            <para>
             <code>X-SES-SOURCE-ARN</code> 
            </para>
             </li> <li> 
            <para>
             <code>X-SES-FROM-ARN</code> 
            </para>
             </li> <li> 
            <para>
             <code>X-SES-RETURN-PATH-ARN</code> 
            </para>
             </li> </ul> <important> 
            <para>
            Do not include these X-headers in the DKIM signature, because they are removed by
            Amazon SES before sending the email.
            </para>
             </important> 
            <para>
            For the most common sending authorization use case, we recommend that you specify
            the <code>SourceIdentityArn</code> and do not specify either the <code>FromIdentityArn</code>
            or <code>ReturnPathIdentityArn</code>. (The same note applies to the corresponding
            X-headers.) If you only specify the <code>SourceIdentityArn</code>, Amazon SES will
            simply set the "From" address and the "Return Path" address to the identity specified
            in <code>SourceIdentityArn</code>. For more information about sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendRawEmail service method.</param>
            
            <returns>The response from the SendRawEmail service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException">
            Indicates that the message could not be sent because Amazon SES could not read the
            MX record required to use the specified MAIL FROM domain. For information about editing
            the custom MAIL FROM domain settings for an identity, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-edit.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.MessageRejectedException">
            Indicates that the action failed, and the message could not be sent. Check the error
            stack for more information about what caused the error.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSendRawEmail(Amazon.SimpleEmail.Model.SendRawEmailRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendRawEmail operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendRawEmail operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendRawEmail
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSendRawEmail(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendRawEmail operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendRawEmail.</param>
            
            <returns>Returns a  SendRawEmailResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetActiveReceiptRuleSet(Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest)">
            <summary>
            Sets the specified receipt rule set as the active receipt rule set.
            
             <note> 
            <para>
            To disable your email-receiving through Amazon SES completely, you can call this API
            with RuleSetName set to null.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetActiveReceiptRuleSet service method.</param>
            
            <returns>The response from the SetActiveReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSetActiveReceiptRuleSet(Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetActiveReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetActiveReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetActiveReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSetActiveReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetActiveReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetActiveReceiptRuleSet.</param>
            
            <returns>Returns a  SetActiveReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetIdentityDkimEnabled(Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest)">
            <summary>
            Enables or disables Easy DKIM signing of email sent from an identity:
            
             <ul> <li> 
            <para>
            If Easy DKIM signing is enabled for a domain name identity (e.g., <code>example.com</code>),
            then Amazon SES will DKIM-sign all email sent by addresses under that domain name
            (e.g., <code>user@example.com</code>).
            </para>
             </li> <li> 
            <para>
            If Easy DKIM signing is enabled for an email address, then Amazon SES will DKIM-sign
            all email sent by that email address.
            </para>
             </li> </ul> 
            <para>
            For email addresses (e.g., <code>user@example.com</code>), you can only enable Easy
            DKIM signing if the corresponding domain (e.g., <code>example.com</code>) has been
            set up for Easy DKIM using the AWS Console or the <code>VerifyDomainDkim</code> action.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about Easy DKIM signing, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityDkimEnabled service method.</param>
            
            <returns>The response from the SetIdentityDkimEnabled service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSetIdentityDkimEnabled(Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityDkimEnabled operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityDkimEnabled operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityDkimEnabled
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSetIdentityDkimEnabled(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityDkimEnabled operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityDkimEnabled.</param>
            
            <returns>Returns a  SetIdentityDkimEnabledResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetIdentityFeedbackForwardingEnabled(Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest)">
            <summary>
            Given an identity (an email address or a domain), enables or disables whether Amazon
            SES forwards bounce and complaint notifications as email. Feedback forwarding can
            only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified
            for both bounces and complaints.
            
             <note> 
            <para>
            Feedback forwarding does not apply to delivery notifications. Delivery notifications
            are only available through Amazon SNS.
            </para>
             </note> 
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityFeedbackForwardingEnabled service method.</param>
            
            <returns>The response from the SetIdentityFeedbackForwardingEnabled service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSetIdentityFeedbackForwardingEnabled(Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityFeedbackForwardingEnabled operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityFeedbackForwardingEnabled operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityFeedbackForwardingEnabled
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSetIdentityFeedbackForwardingEnabled(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityFeedbackForwardingEnabled operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityFeedbackForwardingEnabled.</param>
            
            <returns>Returns a  SetIdentityFeedbackForwardingEnabledResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetIdentityHeadersInNotificationsEnabled(Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest)">
            <summary>
            Given an identity (an email address or a domain), sets whether Amazon SES includes
            the original email headers in the Amazon Simple Notification Service (Amazon SNS)
            notifications of a specified type.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityHeadersInNotificationsEnabled service method.</param>
            
            <returns>The response from the SetIdentityHeadersInNotificationsEnabled service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSetIdentityHeadersInNotificationsEnabled(Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityHeadersInNotificationsEnabled operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityHeadersInNotificationsEnabled operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityHeadersInNotificationsEnabled
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSetIdentityHeadersInNotificationsEnabled(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityHeadersInNotificationsEnabled operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityHeadersInNotificationsEnabled.</param>
            
            <returns>Returns a  SetIdentityHeadersInNotificationsEnabledResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetIdentityMailFromDomain(Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest)">
            <summary>
            Enables or disables the custom MAIL FROM domain setup for a verified identity (an
            email address or a domain).
            
             <important> 
            <para>
            To send emails using the specified MAIL FROM domain, you must add an MX record to
            your MAIL FROM domain's DNS settings. If you want your emails to pass Sender Policy
            Framework (SPF) checks, you must also add or update an SPF record. For more information,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityMailFromDomain service method.</param>
            
            <returns>The response from the SetIdentityMailFromDomain service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSetIdentityMailFromDomain(Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityMailFromDomain operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityMailFromDomain operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityMailFromDomain
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSetIdentityMailFromDomain(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityMailFromDomain operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityMailFromDomain.</param>
            
            <returns>Returns a  SetIdentityMailFromDomainResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetIdentityNotificationTopic(Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest)">
            <summary>
            Given an identity (an email address or a domain), sets the Amazon Simple Notification
            Service (Amazon SNS) topic to which Amazon SES will publish bounce, complaint, and/or
            delivery notifications for emails sent with that identity as the <code>Source</code>.
            
             <note> 
            <para>
            Unless feedback forwarding is enabled, you must specify Amazon SNS topics for bounce
            and complaint notifications. For more information, see <code>SetIdentityFeedbackForwardingEnabled</code>.
            </para>
             </note> 
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about feedback notification, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityNotificationTopic service method.</param>
            
            <returns>The response from the SetIdentityNotificationTopic service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSetIdentityNotificationTopic(Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityNotificationTopic operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityNotificationTopic operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityNotificationTopic
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSetIdentityNotificationTopic(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityNotificationTopic operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityNotificationTopic.</param>
            
            <returns>Returns a  SetIdentityNotificationTopicResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.SetReceiptRulePosition(Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest)">
            <summary>
            Sets the position of the specified receipt rule in the receipt rule set.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetReceiptRulePosition service method.</param>
            
            <returns>The response from the SetReceiptRulePosition service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginSetReceiptRulePosition(Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetReceiptRulePosition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetReceiptRulePosition operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetReceiptRulePosition
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndSetReceiptRulePosition(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetReceiptRulePosition operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetReceiptRulePosition.</param>
            
            <returns>Returns a  SetReceiptRulePositionResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.UpdateReceiptRule(Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest)">
            <summary>
            Updates a receipt rule.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateReceiptRule service method.</param>
            
            <returns>The response from the UpdateReceiptRule service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException">
            Indicates that the provided AWS Lambda function is invalid, or that Amazon SES could
            not execute the provided function, possibly due to permissions issues. For information
            about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException">
            Indicates that the provided Amazon S3 bucket or AWS KMS encryption key is invalid,
            or that Amazon SES could not publish to the bucket, possibly due to permissions issues.
            For information about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidSnsTopicException">
            Indicates that the provided Amazon SNS topic is invalid, or that Amazon SES could
            not publish to the topic, possibly due to permissions issues. For information about
            giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginUpdateReceiptRule(Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateReceiptRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateReceiptRule operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateReceiptRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndUpdateReceiptRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateReceiptRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateReceiptRule.</param>
            
            <returns>Returns a  UpdateReceiptRuleResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.VerifyDomainDkim(Amazon.SimpleEmail.Model.VerifyDomainDkimRequest)">
            <summary>
            Returns a set of DKIM tokens for a domain. DKIM <i>tokens</i> are character strings
            that represent your domain's identity. Using these tokens, you will need to create
            DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web
            Services will eventually detect that you have updated your DNS records; this detection
            process may take up to 72 hours. Upon successful detection, Amazon SES will be able
            to DKIM-sign email originating from that domain.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            To enable or disable Easy DKIM signing for a domain, use the <code>SetIdentityDkimEnabled</code>
            action.
            </para>
             
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyDomainDkim service method.</param>
            
            <returns>The response from the VerifyDomainDkim service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginVerifyDomainDkim(Amazon.SimpleEmail.Model.VerifyDomainDkimRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyDomainDkim operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyDomainDkim operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyDomainDkim
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndVerifyDomainDkim(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyDomainDkim operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyDomainDkim.</param>
            
            <returns>Returns a  VerifyDomainDkimResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.VerifyDomainIdentity(Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest)">
            <summary>
            Verifies a domain.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyDomainIdentity service method.</param>
            
            <returns>The response from the VerifyDomainIdentity service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginVerifyDomainIdentity(Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyDomainIdentity operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyDomainIdentity operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyDomainIdentity
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndVerifyDomainIdentity(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyDomainIdentity operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyDomainIdentity.</param>
            
            <returns>Returns a  VerifyDomainIdentityResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.VerifyEmailAddress(Amazon.SimpleEmail.Model.VerifyEmailAddressRequest)">
            <summary>
            Verifies an email address. This action causes a confirmation email message to be sent
            to the specified address.
            
             <important> 
            <para>
            The VerifyEmailAddress action is deprecated as of the May 15, 2012 release of Domain
            Verification. The VerifyEmailIdentity action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyEmailAddress service method.</param>
            
            <returns>The response from the VerifyEmailAddress service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginVerifyEmailAddress(Amazon.SimpleEmail.Model.VerifyEmailAddressRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyEmailAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyEmailAddress operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyEmailAddress
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndVerifyEmailAddress(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyEmailAddress operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyEmailAddress.</param>
            
            <returns>Returns a  VerifyEmailAddressResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.VerifyEmailIdentity(Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest)">
            <summary>
            Verifies an email address. This action causes a confirmation email message to be sent
            to the specified address.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyEmailIdentity service method.</param>
            
            <returns>The response from the VerifyEmailIdentity service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.BeginVerifyEmailIdentity(Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyEmailIdentity operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyEmailIdentity operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyEmailIdentity
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.AmazonSimpleEmailServiceClient.EndVerifyEmailIdentity(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyEmailIdentity operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyEmailIdentity.</param>
            
            <returns>Returns a  VerifyEmailIdentityResult from SimpleEmailService.</returns>
        </member>
        <member name="T:Amazon.SimpleEmail.IAmazonSimpleEmailService">
             <summary>
             Interface for accessing SimpleEmailService
            
             Amazon Simple Email Service 
             <para>
              This is the API Reference for Amazon Simple Email Service (Amazon SES). This documentation
             is intended to be used in conjunction with the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html">Amazon
             SES Developer Guide</a>. 
             </para>
              <note> 
             <para>
              For a list of Amazon SES endpoints to use in service requests, see <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html">Regions
             and Amazon SES</a> in the Amazon SES Developer Guide. 
             </para>
              </note>
             </summary>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.CloneReceiptRuleSet(Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest)">
            <summary>
            Creates a receipt rule set by cloning an existing one. All receipt rules and configurations
            are copied to the new receipt rule set and are completely independent of the source
            rule set.
            
             
            <para>
            For information about setting up rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CloneReceiptRuleSet service method.</param>
            
            <returns>The response from the CloneReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            Indicates that a resource could not be created due to a naming conflict.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginCloneReceiptRuleSet(Amazon.SimpleEmail.Model.CloneReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CloneReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CloneReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCloneReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndCloneReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CloneReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCloneReceiptRuleSet.</param>
            
            <returns>Returns a  CloneReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.CreateReceiptFilter(Amazon.SimpleEmail.Model.CreateReceiptFilterRequest)">
            <summary>
            Creates a new IP address filter.
            
             
            <para>
            For information about setting up IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateReceiptFilter service method.</param>
            
            <returns>The response from the CreateReceiptFilter service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            Indicates that a resource could not be created due to a naming conflict.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginCreateReceiptFilter(Amazon.SimpleEmail.Model.CreateReceiptFilterRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateReceiptFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReceiptFilter operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateReceiptFilter
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndCreateReceiptFilter(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateReceiptFilter operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateReceiptFilter.</param>
            
            <returns>Returns a  CreateReceiptFilterResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.CreateReceiptRule(Amazon.SimpleEmail.Model.CreateReceiptRuleRequest)">
            <summary>
            Creates a receipt rule.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateReceiptRule service method.</param>
            
            <returns>The response from the CreateReceiptRule service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            Indicates that a resource could not be created due to a naming conflict.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException">
            Indicates that the provided AWS Lambda function is invalid, or that Amazon SES could
            not execute the provided function, possibly due to permissions issues. For information
            about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException">
            Indicates that the provided Amazon S3 bucket or AWS KMS encryption key is invalid,
            or that Amazon SES could not publish to the bucket, possibly due to permissions issues.
            For information about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidSnsTopicException">
            Indicates that the provided Amazon SNS topic is invalid, or that Amazon SES could
            not publish to the topic, possibly due to permissions issues. For information about
            giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginCreateReceiptRule(Amazon.SimpleEmail.Model.CreateReceiptRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateReceiptRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReceiptRule operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateReceiptRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndCreateReceiptRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateReceiptRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateReceiptRule.</param>
            
            <returns>Returns a  CreateReceiptRuleResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.CreateReceiptRuleSet(Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest)">
            <summary>
            Creates an empty receipt rule set.
            
             
            <para>
            For information about setting up receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateReceiptRuleSet service method.</param>
            
            <returns>The response from the CreateReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.AlreadyExistsException">
            Indicates that a resource could not be created due to a naming conflict.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginCreateReceiptRuleSet(Amazon.SimpleEmail.Model.CreateReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndCreateReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateReceiptRuleSet.</param>
            
            <returns>Returns a  CreateReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DeleteIdentity(Amazon.SimpleEmail.Model.DeleteIdentityRequest)">
            <summary>
            Deletes the specified identity (an email address or a domain) from the list of verified
            identities.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentity service method.</param>
            
            <returns>The response from the DeleteIdentity service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDeleteIdentity(Amazon.SimpleEmail.Model.DeleteIdentityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteIdentity operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIdentity operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteIdentity
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDeleteIdentity(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteIdentity operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteIdentity.</param>
            
            <returns>Returns a  DeleteIdentityResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DeleteIdentityPolicy(Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest)">
            <summary>
            Deletes the specified sending authorization policy for the given identity (an email
            address or a domain). This API returns successfully even if a policy with the specified
            name does not exist.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityPolicy service method.</param>
            
            <returns>The response from the DeleteIdentityPolicy service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDeleteIdentityPolicy(Amazon.SimpleEmail.Model.DeleteIdentityPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteIdentityPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteIdentityPolicy operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteIdentityPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDeleteIdentityPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteIdentityPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteIdentityPolicy.</param>
            
            <returns>Returns a  DeleteIdentityPolicyResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DeleteReceiptFilter(Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest)">
            <summary>
            Deletes the specified IP address filter.
            
             
            <para>
            For information about managing IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptFilter service method.</param>
            
            <returns>The response from the DeleteReceiptFilter service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDeleteReceiptFilter(Amazon.SimpleEmail.Model.DeleteReceiptFilterRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteReceiptFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptFilter operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteReceiptFilter
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDeleteReceiptFilter(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteReceiptFilter operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteReceiptFilter.</param>
            
            <returns>Returns a  DeleteReceiptFilterResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DeleteReceiptRule(Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest)">
            <summary>
            Deletes the specified receipt rule.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptRule service method.</param>
            
            <returns>The response from the DeleteReceiptRule service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDeleteReceiptRule(Amazon.SimpleEmail.Model.DeleteReceiptRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteReceiptRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptRule operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteReceiptRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDeleteReceiptRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteReceiptRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteReceiptRule.</param>
            
            <returns>Returns a  DeleteReceiptRuleResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DeleteReceiptRuleSet(Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest)">
            <summary>
            Deletes the specified receipt rule set and all of the receipt rules it contains.
            
             <note> 
            <para>
            The currently active rule set cannot be deleted.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptRuleSet service method.</param>
            
            <returns>The response from the DeleteReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.CannotDeleteException">
            Indicates that the delete operation could not be completed.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDeleteReceiptRuleSet(Amazon.SimpleEmail.Model.DeleteReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDeleteReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteReceiptRuleSet.</param>
            
            <returns>Returns a  DeleteReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DeleteVerifiedEmailAddress(Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest)">
            <summary>
            Deletes the specified email address from the list of verified addresses.
            
             <important> 
            <para>
            The DeleteVerifiedEmailAddress action is deprecated as of the May 15, 2012 release
            of Domain Verification. The DeleteIdentity action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteVerifiedEmailAddress service method.</param>
            
            <returns>The response from the DeleteVerifiedEmailAddress service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDeleteVerifiedEmailAddress(Amazon.SimpleEmail.Model.DeleteVerifiedEmailAddressRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteVerifiedEmailAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteVerifiedEmailAddress operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteVerifiedEmailAddress
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDeleteVerifiedEmailAddress(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteVerifiedEmailAddress operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteVerifiedEmailAddress.</param>
            
            <returns>Returns a  DeleteVerifiedEmailAddressResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DescribeActiveReceiptRuleSet(Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetRequest)">
            <summary>
            Returns the metadata and receipt rules for the receipt rule set that is currently
            active.
            
             
            <para>
            For information about setting up receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rule-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeActiveReceiptRuleSet service method.</param>
            
            <returns>The response from the DescribeActiveReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDescribeActiveReceiptRuleSet(Amazon.SimpleEmail.Model.DescribeActiveReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeActiveReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeActiveReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeActiveReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDescribeActiveReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeActiveReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeActiveReceiptRuleSet.</param>
            
            <returns>Returns a  DescribeActiveReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DescribeReceiptRule(Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest)">
            <summary>
            Returns the details of the specified receipt rule.
            
             
            <para>
            For information about setting up receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReceiptRule service method.</param>
            
            <returns>The response from the DescribeReceiptRule service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDescribeReceiptRule(Amazon.SimpleEmail.Model.DescribeReceiptRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeReceiptRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReceiptRule operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeReceiptRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDescribeReceiptRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeReceiptRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeReceiptRule.</param>
            
            <returns>Returns a  DescribeReceiptRuleResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.DescribeReceiptRuleSet(Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest)">
            <summary>
            Returns the details of the specified receipt rule set.
            
             
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeReceiptRuleSet service method.</param>
            
            <returns>The response from the DescribeReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginDescribeReceiptRuleSet(Amazon.SimpleEmail.Model.DescribeReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndDescribeReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeReceiptRuleSet.</param>
            
            <returns>Returns a  DescribeReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetIdentityDkimAttributes(Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest)">
            <summary>
            Returns the current status of Easy DKIM signing for an entity. For domain name identities,
            this action also returns the DKIM tokens that are required for Easy DKIM signing,
            and whether Amazon SES has successfully verified that these tokens have been published.
            
             
            <para>
            This action takes a list of identities as input and returns the following information
            for each:
            </para>
             <ul> <li> 
            <para>
            Whether Easy DKIM signing is enabled or disabled.
            </para>
             </li> <li> 
            <para>
            A set of DKIM tokens that represent the identity. If the identity is an email address,
            the tokens represent the domain of that address.
            </para>
             </li> <li> 
            <para>
            Whether Amazon SES has successfully verified the DKIM tokens published in the domain's
            DNS. This information is only returned for domain name identities, not for email addresses.
            </para>
             </li> </ul> 
            <para>
            This action is throttled at one request per second and can only get DKIM attributes
            for up to 100 identities at a time.
            </para>
             
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityDkimAttributes service method.</param>
            
            <returns>The response from the GetIdentityDkimAttributes service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginGetIdentityDkimAttributes(Amazon.SimpleEmail.Model.GetIdentityDkimAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityDkimAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityDkimAttributes operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityDkimAttributes
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndGetIdentityDkimAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityDkimAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityDkimAttributes.</param>
            
            <returns>Returns a  GetIdentityDkimAttributesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetIdentityMailFromDomainAttributes(Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesRequest)">
            <summary>
            Returns the custom MAIL FROM attributes for a list of identities (email addresses
            and/or domains).
            
             
            <para>
            This action is throttled at one request per second and can only get custom MAIL FROM
            attributes for up to 100 identities at a time.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityMailFromDomainAttributes service method.</param>
            
            <returns>The response from the GetIdentityMailFromDomainAttributes service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginGetIdentityMailFromDomainAttributes(Amazon.SimpleEmail.Model.GetIdentityMailFromDomainAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityMailFromDomainAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityMailFromDomainAttributes operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityMailFromDomainAttributes
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndGetIdentityMailFromDomainAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityMailFromDomainAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityMailFromDomainAttributes.</param>
            
            <returns>Returns a  GetIdentityMailFromDomainAttributesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetIdentityNotificationAttributes(Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest)">
            <summary>
            Given a list of verified identities (email addresses and/or domains), returns a structure
            describing identity notification attributes.
            
             
            <para>
            This action is throttled at one request per second and can only get notification attributes
            for up to 100 identities at a time.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityNotificationAttributes service method.</param>
            
            <returns>The response from the GetIdentityNotificationAttributes service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginGetIdentityNotificationAttributes(Amazon.SimpleEmail.Model.GetIdentityNotificationAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityNotificationAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityNotificationAttributes operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityNotificationAttributes
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndGetIdentityNotificationAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityNotificationAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityNotificationAttributes.</param>
            
            <returns>Returns a  GetIdentityNotificationAttributesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetIdentityPolicies(Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest)">
            <summary>
            Returns the requested sending authorization policies for the given identity (an email
            address or a domain). The policies are returned as a map of policy names to policy
            contents. You can retrieve a maximum of 20 policies at a time.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityPolicies service method.</param>
            
            <returns>The response from the GetIdentityPolicies service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginGetIdentityPolicies(Amazon.SimpleEmail.Model.GetIdentityPoliciesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityPolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityPolicies operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityPolicies
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndGetIdentityPolicies(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityPolicies operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityPolicies.</param>
            
            <returns>Returns a  GetIdentityPoliciesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetIdentityVerificationAttributes(Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest)">
            <summary>
            Given a list of identities (email addresses and/or domains), returns the verification
            status and (for domain identities) the verification token for each identity.
            
             
            <para>
            This action is throttled at one request per second and can only get verification attributes
            for up to 100 identities at a time.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIdentityVerificationAttributes service method.</param>
            
            <returns>The response from the GetIdentityVerificationAttributes service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginGetIdentityVerificationAttributes(Amazon.SimpleEmail.Model.GetIdentityVerificationAttributesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetIdentityVerificationAttributes operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetIdentityVerificationAttributes operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetIdentityVerificationAttributes
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndGetIdentityVerificationAttributes(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetIdentityVerificationAttributes operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetIdentityVerificationAttributes.</param>
            
            <returns>Returns a  GetIdentityVerificationAttributesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetSendQuota">
            <summary>
            Returns the user's current sending limits.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            
            <returns>The response from the GetSendQuota service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetSendQuota(Amazon.SimpleEmail.Model.GetSendQuotaRequest)">
            <summary>
            Returns the user's current sending limits.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSendQuota service method.</param>
            
            <returns>The response from the GetSendQuota service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginGetSendQuota(Amazon.SimpleEmail.Model.GetSendQuotaRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetSendQuota operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSendQuota operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetSendQuota
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndGetSendQuota(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetSendQuota operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetSendQuota.</param>
            
            <returns>Returns a  GetSendQuotaResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetSendStatistics">
            <summary>
            Returns the user's sending statistics. The result is a list of data points, representing
            the last two weeks of sending activity.
            
             
            <para>
            Each data point in the list contains statistics for a 15-minute interval.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            
            <returns>The response from the GetSendStatistics service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.GetSendStatistics(Amazon.SimpleEmail.Model.GetSendStatisticsRequest)">
            <summary>
            Returns the user's sending statistics. The result is a list of data points, representing
            the last two weeks of sending activity.
            
             
            <para>
            Each data point in the list contains statistics for a 15-minute interval.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSendStatistics service method.</param>
            
            <returns>The response from the GetSendStatistics service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginGetSendStatistics(Amazon.SimpleEmail.Model.GetSendStatisticsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetSendStatistics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSendStatistics operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetSendStatistics
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndGetSendStatistics(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetSendStatistics operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetSendStatistics.</param>
            
            <returns>Returns a  GetSendStatisticsResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListIdentities">
            <summary>
            Returns a list containing all of the identities (email addresses and domains) for
            your AWS account, regardless of verification status.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            
            <returns>The response from the ListIdentities service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListIdentities(Amazon.SimpleEmail.Model.ListIdentitiesRequest)">
            <summary>
            Returns a list containing all of the identities (email addresses and domains) for
            your AWS account, regardless of verification status.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentities service method.</param>
            
            <returns>The response from the ListIdentities service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginListIdentities(Amazon.SimpleEmail.Model.ListIdentitiesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListIdentities operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentities operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListIdentities
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndListIdentities(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListIdentities operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListIdentities.</param>
            
            <returns>Returns a  ListIdentitiesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListIdentityPolicies(Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest)">
            <summary>
            Returns a list of sending authorization policies that are attached to the given identity
            (an email address or a domain). This API returns only a list. If you want the actual
            policy content, you can use <code>GetIdentityPolicies</code>.
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListIdentityPolicies service method.</param>
            
            <returns>The response from the ListIdentityPolicies service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginListIdentityPolicies(Amazon.SimpleEmail.Model.ListIdentityPoliciesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListIdentityPolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListIdentityPolicies operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListIdentityPolicies
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndListIdentityPolicies(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListIdentityPolicies operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListIdentityPolicies.</param>
            
            <returns>Returns a  ListIdentityPoliciesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListReceiptFilters(Amazon.SimpleEmail.Model.ListReceiptFiltersRequest)">
            <summary>
            Lists the IP address filters associated with your AWS account.
            
             
            <para>
            For information about managing IP address filters, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-ip-filters.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceiptFilters service method.</param>
            
            <returns>The response from the ListReceiptFilters service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginListReceiptFilters(Amazon.SimpleEmail.Model.ListReceiptFiltersRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListReceiptFilters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListReceiptFilters operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListReceiptFilters
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndListReceiptFilters(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListReceiptFilters operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListReceiptFilters.</param>
            
            <returns>Returns a  ListReceiptFiltersResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListReceiptRuleSets(Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest)">
            <summary>
            Lists the receipt rule sets that exist under your AWS account. If there are additional
            receipt rule sets to be retrieved, you will receive a <code>NextToken</code> that
            you can provide to the next call to <code>ListReceiptRuleSets</code> to retrieve the
            additional entries.
            
             
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListReceiptRuleSets service method.</param>
            
            <returns>The response from the ListReceiptRuleSets service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginListReceiptRuleSets(Amazon.SimpleEmail.Model.ListReceiptRuleSetsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListReceiptRuleSets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListReceiptRuleSets operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListReceiptRuleSets
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndListReceiptRuleSets(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListReceiptRuleSets operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListReceiptRuleSets.</param>
            
            <returns>Returns a  ListReceiptRuleSetsResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListVerifiedEmailAddresses">
            <summary>
            Returns a list containing all of the email addresses that have been verified.
            
             <important> 
            <para>
            The ListVerifiedEmailAddresses action is deprecated as of the May 15, 2012 release
            of Domain Verification. The ListIdentities action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            
            <returns>The response from the ListVerifiedEmailAddresses service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ListVerifiedEmailAddresses(Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest)">
            <summary>
            Returns a list containing all of the email addresses that have been verified.
            
             <important> 
            <para>
            The ListVerifiedEmailAddresses action is deprecated as of the May 15, 2012 release
            of Domain Verification. The ListIdentities action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListVerifiedEmailAddresses service method.</param>
            
            <returns>The response from the ListVerifiedEmailAddresses service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginListVerifiedEmailAddresses(Amazon.SimpleEmail.Model.ListVerifiedEmailAddressesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListVerifiedEmailAddresses operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListVerifiedEmailAddresses operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListVerifiedEmailAddresses
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndListVerifiedEmailAddresses(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListVerifiedEmailAddresses operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListVerifiedEmailAddresses.</param>
            
            <returns>Returns a  ListVerifiedEmailAddressesResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.PutIdentityPolicy(Amazon.SimpleEmail.Model.PutIdentityPolicyRequest)">
            <summary>
            Adds or updates a sending authorization policy for the specified identity (an email
            address or a domain).
            
             <note> 
            <para>
            This API is for the identity owner only. If you have not verified the identity, this
            API will return an error.
            </para>
             </note> 
            <para>
            Sending authorization is a feature that enables an identity owner to authorize other
            senders to use its identities. For information about using sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutIdentityPolicy service method.</param>
            
            <returns>The response from the PutIdentityPolicy service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidPolicyException">
            Indicates that the provided policy is invalid. Check the error stack for more information
            about what caused the error.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginPutIdentityPolicy(Amazon.SimpleEmail.Model.PutIdentityPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the PutIdentityPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutIdentityPolicy operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPutIdentityPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndPutIdentityPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  PutIdentityPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPutIdentityPolicy.</param>
            
            <returns>Returns a  PutIdentityPolicyResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.ReorderReceiptRuleSet(Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest)">
            <summary>
            Reorders the receipt rules within a receipt rule set.
            
             <note> 
            <para>
            All of the rules in the rule set must be represented in this request. That is, this
            API will return an error if the reorder request doesn't explicitly position all of
            the rules.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReorderReceiptRuleSet service method.</param>
            
            <returns>The response from the ReorderReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginReorderReceiptRuleSet(Amazon.SimpleEmail.Model.ReorderReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ReorderReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReorderReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndReorderReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndReorderReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ReorderReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginReorderReceiptRuleSet.</param>
            
            <returns>Returns a  ReorderReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SendBounce(Amazon.SimpleEmail.Model.SendBounceRequest)">
            <summary>
            Generates and sends a bounce message to the sender of an email you received through
            Amazon SES. You can only use this API on an email up to 24 hours after you receive
            it.
            
             <note> 
            <para>
            You cannot use this API to send generic bounces for mail that was not received by
            Amazon SES.
            </para>
             </note> 
            <para>
            For information about receiving email through Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendBounce service method.</param>
            
            <returns>The response from the SendBounce service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.MessageRejectedException">
            Indicates that the action failed, and the message could not be sent. Check the error
            stack for more information about what caused the error.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSendBounce(Amazon.SimpleEmail.Model.SendBounceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendBounce operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendBounce operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendBounce
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSendBounce(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendBounce operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendBounce.</param>
            
            <returns>Returns a  SendBounceResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SendEmail(Amazon.SimpleEmail.Model.SendEmailRequest)">
            <summary>
            Composes an email message based on input data, and then immediately queues the message
            for sending.
            
             
            <para>
            There are several important points to know about <code>SendEmail</code>:
            </para>
             <ul> <li> 
            <para>
            You can only send email from verified email addresses and domains; otherwise, you
            will get an "Email address not verified" error. If your account is still in the Amazon
            SES sandbox, you must also verify every recipient email address except for the recipients
            provided by the Amazon SES mailbox simulator. For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            The total size of the message cannot exceed 10 MB. This includes any attachments that
            are part of the message.
            </para>
             </li> <li> 
            <para>
            Amazon SES has a limit on the total number of recipients per message. The combined
            number of To:, CC: and BCC: email addresses cannot exceed 50. If you need to send
            an email message to a larger audience, you can divide your recipient list into groups
            of 50 or fewer, and then call Amazon SES repeatedly to send the message to each group.
            </para>
             </li> <li> 
            <para>
            For every message that you send, the total number of recipients (To:, CC: and BCC:)
            is counted against your sending quota - the maximum number of emails you can send
            in a 24-hour period. For information about your sending quota, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendEmail service method.</param>
            
            <returns>The response from the SendEmail service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException">
            Indicates that the message could not be sent because Amazon SES could not read the
            MX record required to use the specified MAIL FROM domain. For information about editing
            the custom MAIL FROM domain settings for an identity, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-edit.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.MessageRejectedException">
            Indicates that the action failed, and the message could not be sent. Check the error
            stack for more information about what caused the error.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSendEmail(Amazon.SimpleEmail.Model.SendEmailRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendEmail operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendEmail operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendEmail
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSendEmail(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendEmail operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendEmail.</param>
            
            <returns>Returns a  SendEmailResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SendRawEmail(Amazon.SimpleEmail.Model.SendRawEmailRequest)">
            <summary>
            Sends an email message, with header and content specified by the client. The <code>SendRawEmail</code>
            action is useful for sending multipart MIME emails. The raw text of the message must
            comply with Internet email standards; otherwise, the message cannot be sent. 
            
             
            <para>
            There are several important points to know about <code>SendRawEmail</code>:
            </para>
             <ul> <li> 
            <para>
            You can only send email from verified email addresses and domains; otherwise, you
            will get an "Email address not verified" error. If your account is still in the Amazon
            SES sandbox, you must also verify every recipient email address except for the recipients
            provided by the Amazon SES mailbox simulator. For more information, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            The total size of the message cannot exceed 10 MB. This includes any attachments that
            are part of the message.
            </para>
             </li> <li> 
            <para>
            Amazon SES has a limit on the total number of recipients per message. The combined
            number of To:, CC: and BCC: email addresses cannot exceed 50. If you need to send
            an email message to a larger audience, you can divide your recipient list into groups
            of 50 or fewer, and then call Amazon SES repeatedly to send the message to each group.
            </para>
             </li> <li> 
            <para>
            The To:, CC:, and BCC: headers in the raw message can contain a group list. Note that
            each recipient in a group list counts towards the 50-recipient limit.
            </para>
             </li> <li> 
            <para>
            Amazon SES overrides any Message-ID and Date headers you provide.
            </para>
             </li> <li> 
            <para>
            For every message that you send, the total number of recipients (To:, CC: and BCC:)
            is counted against your sending quota - the maximum number of emails you can send
            in a 24-hour period. For information about your sending quota, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> <li> 
            <para>
            If you are using sending authorization to send on behalf of another user, <code>SendRawEmail</code>
            enables you to specify the cross-account identity for the email's "Source," "From,"
            and "Return-Path" parameters in one of two ways: you can pass optional parameters
            <code>SourceArn</code>, <code>FromArn</code>, and/or <code>ReturnPathArn</code> to
            the API, or you can include the following X-headers in the header of your raw email:
            </para>
             <ul> <li> 
            <para>
             <code>X-SES-SOURCE-ARN</code> 
            </para>
             </li> <li> 
            <para>
             <code>X-SES-FROM-ARN</code> 
            </para>
             </li> <li> 
            <para>
             <code>X-SES-RETURN-PATH-ARN</code> 
            </para>
             </li> </ul> <important> 
            <para>
            Do not include these X-headers in the DKIM signature, because they are removed by
            Amazon SES before sending the email.
            </para>
             </important> 
            <para>
            For the most common sending authorization use case, we recommend that you specify
            the <code>SourceIdentityArn</code> and do not specify either the <code>FromIdentityArn</code>
            or <code>ReturnPathIdentityArn</code>. (The same note applies to the corresponding
            X-headers.) If you only specify the <code>SourceIdentityArn</code>, Amazon SES will
            simply set the "From" address and the "Return Path" address to the identity specified
            in <code>SourceIdentityArn</code>. For more information about sending authorization,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon
            SES Developer Guide</a>.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendRawEmail service method.</param>
            
            <returns>The response from the SendRawEmail service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.MailFromDomainNotVerifiedException">
            Indicates that the message could not be sent because Amazon SES could not read the
            MX record required to use the specified MAIL FROM domain. For information about editing
            the custom MAIL FROM domain settings for an identity, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-edit.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.MessageRejectedException">
            Indicates that the action failed, and the message could not be sent. Check the error
            stack for more information about what caused the error.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSendRawEmail(Amazon.SimpleEmail.Model.SendRawEmailRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SendRawEmail operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SendRawEmail operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSendRawEmail
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSendRawEmail(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SendRawEmail operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSendRawEmail.</param>
            
            <returns>Returns a  SendRawEmailResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetActiveReceiptRuleSet(Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest)">
            <summary>
            Sets the specified receipt rule set as the active receipt rule set.
            
             <note> 
            <para>
            To disable your email-receiving through Amazon SES completely, you can call this API
            with RuleSetName set to null.
            </para>
             </note> 
            <para>
            For information about managing receipt rule sets, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rule-sets.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetActiveReceiptRuleSet service method.</param>
            
            <returns>The response from the SetActiveReceiptRuleSet service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSetActiveReceiptRuleSet(Amazon.SimpleEmail.Model.SetActiveReceiptRuleSetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetActiveReceiptRuleSet operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetActiveReceiptRuleSet operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetActiveReceiptRuleSet
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSetActiveReceiptRuleSet(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetActiveReceiptRuleSet operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetActiveReceiptRuleSet.</param>
            
            <returns>Returns a  SetActiveReceiptRuleSetResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetIdentityDkimEnabled(Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest)">
            <summary>
            Enables or disables Easy DKIM signing of email sent from an identity:
            
             <ul> <li> 
            <para>
            If Easy DKIM signing is enabled for a domain name identity (e.g., <code>example.com</code>),
            then Amazon SES will DKIM-sign all email sent by addresses under that domain name
            (e.g., <code>user@example.com</code>).
            </para>
             </li> <li> 
            <para>
            If Easy DKIM signing is enabled for an email address, then Amazon SES will DKIM-sign
            all email sent by that email address.
            </para>
             </li> </ul> 
            <para>
            For email addresses (e.g., <code>user@example.com</code>), you can only enable Easy
            DKIM signing if the corresponding domain (e.g., <code>example.com</code>) has been
            set up for Easy DKIM using the AWS Console or the <code>VerifyDomainDkim</code> action.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about Easy DKIM signing, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityDkimEnabled service method.</param>
            
            <returns>The response from the SetIdentityDkimEnabled service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSetIdentityDkimEnabled(Amazon.SimpleEmail.Model.SetIdentityDkimEnabledRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityDkimEnabled operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityDkimEnabled operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityDkimEnabled
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSetIdentityDkimEnabled(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityDkimEnabled operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityDkimEnabled.</param>
            
            <returns>Returns a  SetIdentityDkimEnabledResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetIdentityFeedbackForwardingEnabled(Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest)">
            <summary>
            Given an identity (an email address or a domain), enables or disables whether Amazon
            SES forwards bounce and complaint notifications as email. Feedback forwarding can
            only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified
            for both bounces and complaints.
            
             <note> 
            <para>
            Feedback forwarding does not apply to delivery notifications. Delivery notifications
            are only available through Amazon SNS.
            </para>
             </note> 
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityFeedbackForwardingEnabled service method.</param>
            
            <returns>The response from the SetIdentityFeedbackForwardingEnabled service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSetIdentityFeedbackForwardingEnabled(Amazon.SimpleEmail.Model.SetIdentityFeedbackForwardingEnabledRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityFeedbackForwardingEnabled operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityFeedbackForwardingEnabled operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityFeedbackForwardingEnabled
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSetIdentityFeedbackForwardingEnabled(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityFeedbackForwardingEnabled operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityFeedbackForwardingEnabled.</param>
            
            <returns>Returns a  SetIdentityFeedbackForwardingEnabledResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetIdentityHeadersInNotificationsEnabled(Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest)">
            <summary>
            Given an identity (an email address or a domain), sets whether Amazon SES includes
            the original email headers in the Amazon Simple Notification Service (Amazon SNS)
            notifications of a specified type.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about using notifications with Amazon SES, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityHeadersInNotificationsEnabled service method.</param>
            
            <returns>The response from the SetIdentityHeadersInNotificationsEnabled service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSetIdentityHeadersInNotificationsEnabled(Amazon.SimpleEmail.Model.SetIdentityHeadersInNotificationsEnabledRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityHeadersInNotificationsEnabled operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityHeadersInNotificationsEnabled operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityHeadersInNotificationsEnabled
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSetIdentityHeadersInNotificationsEnabled(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityHeadersInNotificationsEnabled operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityHeadersInNotificationsEnabled.</param>
            
            <returns>Returns a  SetIdentityHeadersInNotificationsEnabledResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetIdentityMailFromDomain(Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest)">
            <summary>
            Enables or disables the custom MAIL FROM domain setup for a verified identity (an
            email address or a domain).
            
             <important> 
            <para>
            To send emails using the specified MAIL FROM domain, you must add an MX record to
            your MAIL FROM domain's DNS settings. If you want your emails to pass Sender Policy
            Framework (SPF) checks, you must also add or update an SPF record. For more information,
            see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-set.html">Amazon
            SES Developer Guide</a>.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityMailFromDomain service method.</param>
            
            <returns>The response from the SetIdentityMailFromDomain service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSetIdentityMailFromDomain(Amazon.SimpleEmail.Model.SetIdentityMailFromDomainRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityMailFromDomain operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityMailFromDomain operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityMailFromDomain
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSetIdentityMailFromDomain(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityMailFromDomain operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityMailFromDomain.</param>
            
            <returns>Returns a  SetIdentityMailFromDomainResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetIdentityNotificationTopic(Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest)">
            <summary>
            Given an identity (an email address or a domain), sets the Amazon Simple Notification
            Service (Amazon SNS) topic to which Amazon SES will publish bounce, complaint, and/or
            delivery notifications for emails sent with that identity as the <code>Source</code>.
            
             <note> 
            <para>
            Unless feedback forwarding is enabled, you must specify Amazon SNS topics for bounce
            and complaint notifications. For more information, see <code>SetIdentityFeedbackForwardingEnabled</code>.
            </para>
             </note> 
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            For more information about feedback notification, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetIdentityNotificationTopic service method.</param>
            
            <returns>The response from the SetIdentityNotificationTopic service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSetIdentityNotificationTopic(Amazon.SimpleEmail.Model.SetIdentityNotificationTopicRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetIdentityNotificationTopic operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetIdentityNotificationTopic operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetIdentityNotificationTopic
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSetIdentityNotificationTopic(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetIdentityNotificationTopic operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetIdentityNotificationTopic.</param>
            
            <returns>Returns a  SetIdentityNotificationTopicResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.SetReceiptRulePosition(Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest)">
            <summary>
            Sets the position of the specified receipt rule in the receipt rule set.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetReceiptRulePosition service method.</param>
            
            <returns>The response from the SetReceiptRulePosition service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginSetReceiptRulePosition(Amazon.SimpleEmail.Model.SetReceiptRulePositionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetReceiptRulePosition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetReceiptRulePosition operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetReceiptRulePosition
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndSetReceiptRulePosition(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetReceiptRulePosition operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetReceiptRulePosition.</param>
            
            <returns>Returns a  SetReceiptRulePositionResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.UpdateReceiptRule(Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest)">
            <summary>
            Updates a receipt rule.
            
             
            <para>
            For information about managing receipt rules, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-managing-receipt-rules.html">Amazon
            SES Developer Guide</a>.
            </para>
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateReceiptRule service method.</param>
            
            <returns>The response from the UpdateReceiptRule service method, as returned by SimpleEmailService.</returns>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidLambdaFunctionException">
            Indicates that the provided AWS Lambda function is invalid, or that Amazon SES could
            not execute the provided function, possibly due to permissions issues. For information
            about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidS3ConfigurationException">
            Indicates that the provided Amazon S3 bucket or AWS KMS encryption key is invalid,
            or that Amazon SES could not publish to the bucket, possibly due to permissions issues.
            For information about giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.InvalidSnsTopicException">
            Indicates that the provided Amazon SNS topic is invalid, or that Amazon SES could
            not publish to the topic, possibly due to permissions issues. For information about
            giving permissions, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.LimitExceededException">
            Indicates that a resource could not be created due to service limits. For a list of
            Amazon SES limits, see the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/limits.html">Amazon
            SES Developer Guide</a>.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleDoesNotExistException">
            Indicates that the provided receipt rule does not exist.
            </exception>
            <exception cref="T:Amazon.SimpleEmail.Model.RuleSetDoesNotExistException">
            Indicates that the provided receipt rule set does not exist.
            </exception>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginUpdateReceiptRule(Amazon.SimpleEmail.Model.UpdateReceiptRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateReceiptRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateReceiptRule operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateReceiptRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndUpdateReceiptRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateReceiptRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateReceiptRule.</param>
            
            <returns>Returns a  UpdateReceiptRuleResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.VerifyDomainDkim(Amazon.SimpleEmail.Model.VerifyDomainDkimRequest)">
            <summary>
            Returns a set of DKIM tokens for a domain. DKIM <i>tokens</i> are character strings
            that represent your domain's identity. Using these tokens, you will need to create
            DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web
            Services will eventually detect that you have updated your DNS records; this detection
            process may take up to 72 hours. Upon successful detection, Amazon SES will be able
            to DKIM-sign email originating from that domain.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
             
            <para>
            To enable or disable Easy DKIM signing for a domain, use the <code>SetIdentityDkimEnabled</code>
            action.
            </para>
             
            <para>
            For more information about creating DNS records using DKIM tokens, go to the <a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html">Amazon
            SES Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyDomainDkim service method.</param>
            
            <returns>The response from the VerifyDomainDkim service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginVerifyDomainDkim(Amazon.SimpleEmail.Model.VerifyDomainDkimRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyDomainDkim operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyDomainDkim operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyDomainDkim
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndVerifyDomainDkim(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyDomainDkim operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyDomainDkim.</param>
            
            <returns>Returns a  VerifyDomainDkimResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.VerifyDomainIdentity(Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest)">
            <summary>
            Verifies a domain.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyDomainIdentity service method.</param>
            
            <returns>The response from the VerifyDomainIdentity service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginVerifyDomainIdentity(Amazon.SimpleEmail.Model.VerifyDomainIdentityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyDomainIdentity operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyDomainIdentity operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyDomainIdentity
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndVerifyDomainIdentity(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyDomainIdentity operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyDomainIdentity.</param>
            
            <returns>Returns a  VerifyDomainIdentityResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.VerifyEmailAddress(Amazon.SimpleEmail.Model.VerifyEmailAddressRequest)">
            <summary>
            Verifies an email address. This action causes a confirmation email message to be sent
            to the specified address.
            
             <important> 
            <para>
            The VerifyEmailAddress action is deprecated as of the May 15, 2012 release of Domain
            Verification. The VerifyEmailIdentity action is now preferred.
            </para>
             </important> 
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyEmailAddress service method.</param>
            
            <returns>The response from the VerifyEmailAddress service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginVerifyEmailAddress(Amazon.SimpleEmail.Model.VerifyEmailAddressRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyEmailAddress operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyEmailAddress operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyEmailAddress
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndVerifyEmailAddress(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyEmailAddress operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyEmailAddress.</param>
            
            <returns>Returns a  VerifyEmailAddressResult from SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.VerifyEmailIdentity(Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest)">
            <summary>
            Verifies an email address. This action causes a confirmation email message to be sent
            to the specified address.
            
             
            <para>
            This action is throttled at one request per second.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyEmailIdentity service method.</param>
            
            <returns>The response from the VerifyEmailIdentity service method, as returned by SimpleEmailService.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.BeginVerifyEmailIdentity(Amazon.SimpleEmail.Model.VerifyEmailIdentityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyEmailIdentity operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyEmailIdentity operation on AmazonSimpleEmailServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyEmailIdentity
                    operation.</returns>
        </member>
        <member name="M:Amazon.SimpleEmail.IAmazonSimpleEmailService.EndVerifyEmailIdentity(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyEmailIdentity operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyEmailIdentity.</param>
            
            <returns>Returns a  VerifyEmailIdentityResult from SimpleEmailService.</returns>
        </member>
    </members>
</doc>
